;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 02/01/2019 19:13:44
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2816      	GOTO       22
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0003	0x1683      	BSF        STATUS, 5
0x0004	0x1303      	BCF        STATUS, 6
0x0005	0x0821      	MOVF       ___DoICPAddr+1, 0
0x0006	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0007	0x0820      	MOVF       ___DoICPAddr, 0
0x0008	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0009	0x0008      	RETURN
; end of _____DoICP
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x000A	0x2003      	CALL       _____DoICP
0x000B	0x118A      	BCF        PCLATH, 3
0x000C	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x000D	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x000E	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x000F	0x0AA0      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0010	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0011	0x0AA1      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0012	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0013	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0014	0x280A      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0015	0x0008      	RETURN
; end of ___CC2DW
_main:
0x0016	0x20BC      	CALL       188
;LED_Matrix_A_Z.c,35 :: 		void main() {
;LED_Matrix_A_Z.c,37 :: 		TRISB = 0;
0x0017	0x1683      	BSF        STATUS, 5
0x0018	0x1303      	BCF        STATUS, 6
0x0019	0x0186      	CLRF       TRISB
;LED_Matrix_A_Z.c,38 :: 		TRISC = 0;
0x001A	0x0187      	CLRF       TRISC
;LED_Matrix_A_Z.c,39 :: 		PORTB = 0;
0x001B	0x1283      	BCF        STATUS, 5
0x001C	0x0186      	CLRF       PORTB
;LED_Matrix_A_Z.c,40 :: 		PORTC = 0;
0x001D	0x0187      	CLRF       PORTC
;LED_Matrix_A_Z.c,42 :: 		while(1){
L_main0:
;LED_Matrix_A_Z.c,43 :: 		for(i=0; i<10; i++){            // outer loop selection char from array
0x001E	0x1683      	BSF        STATUS, 5
0x001F	0x01A2      	CLRF       _i
L_main2:
0x0020	0x3080      	MOVLW      128
0x0021	0x0622      	XORWF      _i, 0
0x0022	0x00F0      	MOVWF      R0
0x0023	0x3080      	MOVLW      128
0x0024	0x3A0A      	XORLW      10
0x0025	0x0270      	SUBWF      R0, 0
0x0026	0x1803      	BTFSC      STATUS, 0
0x0027	0x2864      	GOTO       L_main3
;LED_Matrix_A_Z.c,44 :: 		for(k=0; k<20; k++){        // middle loop to repeat same display
0x0028	0x01A3      	CLRF       _k
L_main5:
0x0029	0x3080      	MOVLW      128
0x002A	0x0623      	XORWF      _k, 0
0x002B	0x00F0      	MOVWF      R0
0x002C	0x3080      	MOVLW      128
0x002D	0x3A14      	XORLW      20
0x002E	0x0270      	SUBWF      R0, 0
0x002F	0x1803      	BTFSC      STATUS, 0
0x0030	0x2862      	GOTO       L_main6
;LED_Matrix_A_Z.c,45 :: 		col = 0B00000001;       // Defining start position on matrix
0x0031	0x3001      	MOVLW      1
0x0032	0x00A4      	MOVWF      _col
;LED_Matrix_A_Z.c,46 :: 		for(j=0; j<8; j++){     // 8 byte character row
0x0033	0x01A5      	CLRF       _j
L_main8:
0x0034	0x3080      	MOVLW      128
0x0035	0x0625      	XORWF      _j, 0
0x0036	0x00F0      	MOVWF      R0
0x0037	0x3080      	MOVLW      128
0x0038	0x3A08      	XORLW      8
0x0039	0x0270      	SUBWF      R0, 0
0x003A	0x1803      	BTFSC      STATUS, 0
0x003B	0x2860      	GOTO       L_main9
;LED_Matrix_A_Z.c,47 :: 		PORTC =~ col;        // colum activation
0x003C	0x0924      	COMF       _col, 0
0x003D	0x1283      	BCF        STATUS, 5
0x003E	0x0087      	MOVWF      PORTC
;LED_Matrix_A_Z.c,48 :: 		PORTB = dat[i][j];   // PortB reciving row data
0x003F	0x3003      	MOVLW      3
0x0040	0x00F1      	MOVWF      R1
0x0041	0x1683      	BSF        STATUS, 5
0x0042	0x0822      	MOVF       _i, 0
0x0043	0x00F0      	MOVWF      R0
0x0044	0x0871      	MOVF       R1, 0
L__main13:
0x0045	0x1903      	BTFSC      STATUS, 2
0x0046	0x284B      	GOTO       L__main14
0x0047	0x0DF0      	RLF        R0, 1
0x0048	0x1070      	BCF        R0, 0
0x0049	0x3EFF      	ADDLW      255
0x004A	0x2845      	GOTO       L__main13
L__main14:
0x004B	0x3020      	MOVLW      _dat
0x004C	0x07F0      	ADDWF      R0, 1
0x004D	0x0825      	MOVF       _j, 0
0x004E	0x0770      	ADDWF      R0, 0
0x004F	0x0084      	MOVWF      FSR
0x0050	0x0800      	MOVF       INDF, 0
0x0051	0x1283      	BCF        STATUS, 5
0x0052	0x0086      	MOVWF      PORTB
;LED_Matrix_A_Z.c,49 :: 		col <<= 1;           // shifting from last column
0x0053	0x1683      	BSF        STATUS, 5
0x0054	0x0DA4      	RLF        _col, 1
0x0055	0x1024      	BCF        _col, 0
;LED_Matrix_A_Z.c,50 :: 		delay_ms(5);         //
0x0056	0x3007      	MOVLW      7
0x0057	0x00FC      	MOVWF      R12
0x0058	0x307D      	MOVLW      125
0x0059	0x00FD      	MOVWF      R13
L_main11:
0x005A	0x0BFD      	DECFSZ     R13, 1
0x005B	0x285A      	GOTO       L_main11
0x005C	0x0BFC      	DECFSZ     R12, 1
0x005D	0x285A      	GOTO       L_main11
;LED_Matrix_A_Z.c,46 :: 		for(j=0; j<8; j++){     // 8 byte character row
0x005E	0x0AA5      	INCF       _j, 1
;LED_Matrix_A_Z.c,51 :: 		}
0x005F	0x2834      	GOTO       L_main8
L_main9:
;LED_Matrix_A_Z.c,44 :: 		for(k=0; k<20; k++){        // middle loop to repeat same display
0x0060	0x0AA3      	INCF       _k, 1
;LED_Matrix_A_Z.c,52 :: 		}
0x0061	0x2829      	GOTO       L_main5
L_main6:
;LED_Matrix_A_Z.c,43 :: 		for(i=0; i<10; i++){            // outer loop selection char from array
0x0062	0x0AA2      	INCF       _i, 1
;LED_Matrix_A_Z.c,53 :: 		}
0x0063	0x2820      	GOTO       L_main2
L_main3:
;LED_Matrix_A_Z.c,54 :: 		}
0x0064	0x281E      	GOTO       L_main0
;LED_Matrix_A_Z.c,76 :: 		}
L_end_main:
0x0065	0x2865      	GOTO       $+0
; end of _main
0x00BC	0x3020      	MOVLW      32
0x00BD	0x0084      	MOVWF      FSR
0x00BE	0x3050      	MOVLW      80
0x00BF	0x1283      	BCF        STATUS, 5
0x00C0	0x1303      	BCF        STATUS, 6
0x00C1	0x00F0      	MOVWF      R0
0x00C2	0x306B      	MOVLW      107
0x00C3	0x1683      	BSF        STATUS, 5
0x00C4	0x00A0      	MOVWF      ___DoICPAddr
0x00C5	0x3000      	MOVLW      0
0x00C6	0x00A1      	MOVWF      161
0x00C7	0x200A      	CALL       10
0x00C8	0x0008      	RETURN
;LED_Matrix_A_Z.c,0 :: ?ICS_dat
0x006B	0x3400 ;?ICS_dat+0
0x006C	0x3400 ;?ICS_dat+1
0x006D	0x3400 ;?ICS_dat+2
0x006E	0x34FC ;?ICS_dat+3
0x006F	0x3412 ;?ICS_dat+4
0x0070	0x3412 ;?ICS_dat+5
0x0071	0x3412 ;?ICS_dat+6
0x0072	0x34FC ;?ICS_dat+7
0x0073	0x3400 ;?ICS_dat+8
0x0074	0x3400 ;?ICS_dat+9
0x0075	0x3400 ;?ICS_dat+10
0x0076	0x34FE ;?ICS_dat+11
0x0077	0x3492 ;?ICS_dat+12
0x0078	0x3492 ;?ICS_dat+13
0x0079	0x3492 ;?ICS_dat+14
0x007A	0x346C ;?ICS_dat+15
0x007B	0x3400 ;?ICS_dat+16
0x007C	0x3400 ;?ICS_dat+17
0x007D	0x3400 ;?ICS_dat+18
0x007E	0x347C ;?ICS_dat+19
0x007F	0x3482 ;?ICS_dat+20
0x0080	0x3482 ;?ICS_dat+21
0x0081	0x3482 ;?ICS_dat+22
0x0082	0x3482 ;?ICS_dat+23
0x0083	0x3400 ;?ICS_dat+24
0x0084	0x3400 ;?ICS_dat+25
0x0085	0x3400 ;?ICS_dat+26
0x0086	0x34FE ;?ICS_dat+27
0x0087	0x3482 ;?ICS_dat+28
0x0088	0x3482 ;?ICS_dat+29
0x0089	0x3482 ;?ICS_dat+30
0x008A	0x347C ;?ICS_dat+31
0x008B	0x3400 ;?ICS_dat+32
0x008C	0x3400 ;?ICS_dat+33
0x008D	0x3400 ;?ICS_dat+34
0x008E	0x347C ;?ICS_dat+35
0x008F	0x3492 ;?ICS_dat+36
0x0090	0x3492 ;?ICS_dat+37
0x0091	0x3492 ;?ICS_dat+38
0x0092	0x3492 ;?ICS_dat+39
0x0093	0x3400 ;?ICS_dat+40
0x0094	0x3400 ;?ICS_dat+41
0x0095	0x3400 ;?ICS_dat+42
0x0096	0x34FC ;?ICS_dat+43
0x0097	0x3412 ;?ICS_dat+44
0x0098	0x3412 ;?ICS_dat+45
0x0099	0x3412 ;?ICS_dat+46
0x009A	0x3402 ;?ICS_dat+47
0x009B	0x3400 ;?ICS_dat+48
0x009C	0x3400 ;?ICS_dat+49
0x009D	0x3400 ;?ICS_dat+50
0x009E	0x347C ;?ICS_dat+51
0x009F	0x3482 ;?ICS_dat+52
0x00A0	0x3492 ;?ICS_dat+53
0x00A1	0x3492 ;?ICS_dat+54
0x00A2	0x3472 ;?ICS_dat+55
0x00A3	0x3400 ;?ICS_dat+56
0x00A4	0x3400 ;?ICS_dat+57
0x00A5	0x3400 ;?ICS_dat+58
0x00A6	0x34FE ;?ICS_dat+59
0x00A7	0x3410 ;?ICS_dat+60
0x00A8	0x3410 ;?ICS_dat+61
0x00A9	0x3410 ;?ICS_dat+62
0x00AA	0x34FE ;?ICS_dat+63
0x00AB	0x3400 ;?ICS_dat+64
0x00AC	0x3400 ;?ICS_dat+65
0x00AD	0x3400 ;?ICS_dat+66
0x00AE	0x3400 ;?ICS_dat+67
0x00AF	0x3482 ;?ICS_dat+68
0x00B0	0x34FE ;?ICS_dat+69
0x00B1	0x3482 ;?ICS_dat+70
0x00B2	0x3400 ;?ICS_dat+71
0x00B3	0x3400 ;?ICS_dat+72
0x00B4	0x3400 ;?ICS_dat+73
0x00B5	0x3400 ;?ICS_dat+74
0x00B6	0x3442 ;?ICS_dat+75
0x00B7	0x3482 ;?ICS_dat+76
0x00B8	0x3482 ;?ICS_dat+77
0x00B9	0x347E ;?ICS_dat+78
0x00BA	0x3402 ;?ICS_dat+79
; end of ?ICS_dat
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003       [7]    _____DoICP
0x000A      [12]    ___CC2DW
0x0016      [79]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [1]    PORTB
0x0007       [1]    PORTC
0x000A       [1]    PCLATH
0x0020      [80]    _dat
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0086       [1]    TRISB
0x0087       [1]    TRISC
0x00A0       [2]    ___DoICPAddr
0x00A2       [1]    _i
0x00A3       [1]    _k
0x00A4       [1]    _col
0x00A5       [1]    _j
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x006B      [80]    ?ICS_dat
//** Label List: ** 
//----------------------------------------------
  L_main0
  L_main1
  L_main2
  L_main3
  L_main4
  L_main5
  L_main6
  L_main7
  L_main8
  L_main9
  L_main10
  L_main11
  L_end_main
  _main
  L__main13
  L__main14
  L_loopCA2AWs
  L_CA2AWend
  _CCA2AW_Loop1
  L_loopCS2Ss
  L_CS2Send
  _CCS2S_Loop1
  L_CCS2Send
  L_loopFZinSWs
  L_FZinSend
  _CC2D_Loop1
  L_end_____DoICP
  _____DoICP
  L_end_____DoIFC
  _____DoIFC
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end___CC2DW
  ___CC2DW
  L_end_Swap
  _Swap
