;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 5/18/2013 3:20:06 AM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2904      	GOTO       260
_Delay_50us:
;__Lib_Delays.c,19 :: 		void Delay_50us() {
;__Lib_Delays.c,20 :: 		Delay_us(50);
0x0003	0x3021      	MOVLW      33
0x0004	0x1283      	BCF        STATUS, 5
0x0005	0x1303      	BCF        STATUS, 6
0x0006	0x00FD      	MOVWF      R13
L_Delay_50us2:
0x0007	0x0BFD      	DECFSZ     R13, 1
0x0008	0x2807      	GOTO       L_Delay_50us2
;__Lib_Delays.c,21 :: 		}
L_end_Delay_50us:
0x0009	0x0008      	RETURN
; end of _Delay_50us
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x000A	0x0000      	NOP
0x000B	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
L_end_Delay_1us:
0x000C	0x0008      	RETURN
; end of _Delay_1us
_Delay_5500us:
;__Lib_Delays.c,31 :: 		void Delay_5500us() {
;__Lib_Delays.c,32 :: 		Delay_us(5500);
0x000D	0x300F      	MOVLW      15
0x000E	0x1283      	BCF        STATUS, 5
0x000F	0x1303      	BCF        STATUS, 6
0x0010	0x00FC      	MOVWF      R12
0x0011	0x3047      	MOVLW      71
0x0012	0x00FD      	MOVWF      R13
L_Delay_5500us5:
0x0013	0x0BFD      	DECFSZ     R13, 1
0x0014	0x2813      	GOTO       L_Delay_5500us5
0x0015	0x0BFC      	DECFSZ     R12, 1
0x0016	0x2813      	GOTO       L_Delay_5500us5
0x0017	0x0000      	NOP
0x0018	0x0000      	NOP
;__Lib_Delays.c,33 :: 		}
L_end_Delay_5500us:
0x0019	0x0008      	RETURN
; end of _Delay_5500us
_Lcd8_Cmd:
;__Lib_Lcd8.c,57 :: 		
;__Lib_Lcd8.c,59 :: 		
0x001A	0x1283      	BCF        STATUS, 5
0x001B	0x1303      	BCF        STATUS, 6
0x001C	0x1BD6      	BTFSC      FARG_Lcd8_Cmd_out_char, 7
0x001D	0x2820      	GOTO       L__Lcd8_Cmd13
0x001E	0x1388      	BCF        LCD8_D7, BitPos(LCD8_D7+0)
0x001F	0x2821      	GOTO       L__Lcd8_Cmd14
L__Lcd8_Cmd13:
0x0020	0x1788      	BSF        LCD8_D7, BitPos(LCD8_D7+0)
L__Lcd8_Cmd14:
;__Lib_Lcd8.c,60 :: 		
0x0021	0x1B56      	BTFSC      FARG_Lcd8_Cmd_out_char, 6
0x0022	0x2825      	GOTO       L__Lcd8_Cmd15
0x0023	0x1308      	BCF        LCD8_D6, BitPos(LCD8_D6+0)
0x0024	0x2826      	GOTO       L__Lcd8_Cmd16
L__Lcd8_Cmd15:
0x0025	0x1708      	BSF        LCD8_D6, BitPos(LCD8_D6+0)
L__Lcd8_Cmd16:
;__Lib_Lcd8.c,61 :: 		
0x0026	0x1AD6      	BTFSC      FARG_Lcd8_Cmd_out_char, 5
0x0027	0x282A      	GOTO       L__Lcd8_Cmd17
0x0028	0x1288      	BCF        LCD8_D5, BitPos(LCD8_D5+0)
0x0029	0x282B      	GOTO       L__Lcd8_Cmd18
L__Lcd8_Cmd17:
0x002A	0x1688      	BSF        LCD8_D5, BitPos(LCD8_D5+0)
L__Lcd8_Cmd18:
;__Lib_Lcd8.c,62 :: 		
0x002B	0x1A56      	BTFSC      FARG_Lcd8_Cmd_out_char, 4
0x002C	0x282F      	GOTO       L__Lcd8_Cmd19
0x002D	0x1208      	BCF        LCD8_D4, BitPos(LCD8_D4+0)
0x002E	0x2830      	GOTO       L__Lcd8_Cmd20
L__Lcd8_Cmd19:
0x002F	0x1608      	BSF        LCD8_D4, BitPos(LCD8_D4+0)
L__Lcd8_Cmd20:
;__Lib_Lcd8.c,63 :: 		
0x0030	0x19D6      	BTFSC      FARG_Lcd8_Cmd_out_char, 3
0x0031	0x2834      	GOTO       L__Lcd8_Cmd21
0x0032	0x1188      	BCF        LCD8_D3, BitPos(LCD8_D3+0)
0x0033	0x2835      	GOTO       L__Lcd8_Cmd22
L__Lcd8_Cmd21:
0x0034	0x1588      	BSF        LCD8_D3, BitPos(LCD8_D3+0)
L__Lcd8_Cmd22:
;__Lib_Lcd8.c,64 :: 		
0x0035	0x1956      	BTFSC      FARG_Lcd8_Cmd_out_char, 2
0x0036	0x2839      	GOTO       L__Lcd8_Cmd23
0x0037	0x1108      	BCF        LCD8_D2, BitPos(LCD8_D2+0)
0x0038	0x283A      	GOTO       L__Lcd8_Cmd24
L__Lcd8_Cmd23:
0x0039	0x1508      	BSF        LCD8_D2, BitPos(LCD8_D2+0)
L__Lcd8_Cmd24:
;__Lib_Lcd8.c,65 :: 		
0x003A	0x18D6      	BTFSC      FARG_Lcd8_Cmd_out_char, 1
0x003B	0x283E      	GOTO       L__Lcd8_Cmd25
0x003C	0x1088      	BCF        LCD8_D1, BitPos(LCD8_D1+0)
0x003D	0x283F      	GOTO       L__Lcd8_Cmd26
L__Lcd8_Cmd25:
0x003E	0x1488      	BSF        LCD8_D1, BitPos(LCD8_D1+0)
L__Lcd8_Cmd26:
;__Lib_Lcd8.c,66 :: 		
0x003F	0x1856      	BTFSC      FARG_Lcd8_Cmd_out_char, 0
0x0040	0x2843      	GOTO       L__Lcd8_Cmd27
0x0041	0x1008      	BCF        LCD8_D0, BitPos(LCD8_D0+0)
0x0042	0x2844      	GOTO       L__Lcd8_Cmd28
L__Lcd8_Cmd27:
0x0043	0x1408      	BSF        LCD8_D0, BitPos(LCD8_D0+0)
L__Lcd8_Cmd28:
;__Lib_Lcd8.c,68 :: 		
0x0044	0x1506      	BSF        LCD8_RS, BitPos(LCD8_RS+0)
;__Lib_Lcd8.c,70 :: 		
0x0045	0x184A      	BTFSC      __Lib_Lcd8_cmd_status, BitPos(__Lib_Lcd8_cmd_status+0)
0x0046	0x2849      	GOTO       L__Lcd8_Cmd29
0x0047	0x1506      	BSF        LCD8_RS, BitPos(LCD8_RS+0)
0x0048	0x284A      	GOTO       L__Lcd8_Cmd30
L__Lcd8_Cmd29:
0x0049	0x1106      	BCF        LCD8_RS, BitPos(LCD8_RS+0)
L__Lcd8_Cmd30:
;__Lib_Lcd8.c,73 :: 		
0x004A	0x1606      	BSF        LCD8_EN, BitPos(LCD8_EN+0)
;__Lib_Lcd8.c,74 :: 		
0x004B	0x200A      	CALL       _Delay_1us
;__Lib_Lcd8.c,75 :: 		
0x004C	0x1206      	BCF        LCD8_EN, BitPos(LCD8_EN+0)
;__Lib_Lcd8.c,78 :: 		
0x004D	0x1C4A      	BTFSS      __Lib_Lcd8_cmd_status, BitPos(__Lib_Lcd8_cmd_status+0)
0x004E	0x2851      	GOTO       L_Lcd8_Cmd0
;__Lib_Lcd8.c,79 :: 		
0x004F	0x200D      	CALL       _Delay_5500us
0x0050	0x2852      	GOTO       L_Lcd8_Cmd1
L_Lcd8_Cmd0:
;__Lib_Lcd8.c,81 :: 		
0x0051	0x2003      	CALL       _Delay_50us
L_Lcd8_Cmd1:
;__Lib_Lcd8.c,82 :: 		
0x0052	0x0008      	RETURN
; end of _Lcd8_Cmd
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0053	0x1283      	BCF        STATUS, 5
0x0054	0x1303      	BCF        STATUS, 6
0x0055	0x084D      	MOVF       ___DoICPAddr+1, 0
0x0056	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0057	0x084C      	MOVF       ___DoICPAddr, 0
0x0058	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0059	0x0008      	RETURN
; end of _____DoICP
_Lcd8_Chr:
;__Lib_Lcd8.c,84 :: 		
;__Lib_Lcd8.c,86 :: 		
0x005A	0x286C      	GOTO       L_Lcd8_Chr2
;__Lib_Lcd8.c,87 :: 		
L_Lcd8_Chr4:
0x005B	0x3080      	MOVLW      128
0x005C	0x1283      	BCF        STATUS, 5
0x005D	0x1303      	BCF        STATUS, 6
0x005E	0x00D3      	MOVWF      FARG_Lcd8_Chr_row
0x005F	0x287F      	GOTO       L_Lcd8_Chr3
;__Lib_Lcd8.c,88 :: 		
L_Lcd8_Chr5:
0x0060	0x30C0      	MOVLW      192
0x0061	0x00D3      	MOVWF      FARG_Lcd8_Chr_row
0x0062	0x287F      	GOTO       L_Lcd8_Chr3
;__Lib_Lcd8.c,89 :: 		
L_Lcd8_Chr6:
0x0063	0x3094      	MOVLW      148
0x0064	0x00D3      	MOVWF      FARG_Lcd8_Chr_row
0x0065	0x287F      	GOTO       L_Lcd8_Chr3
;__Lib_Lcd8.c,90 :: 		
L_Lcd8_Chr7:
0x0066	0x30D4      	MOVLW      212
0x0067	0x00D3      	MOVWF      FARG_Lcd8_Chr_row
0x0068	0x287F      	GOTO       L_Lcd8_Chr3
;__Lib_Lcd8.c,91 :: 		
L_Lcd8_Chr8:
0x0069	0x3080      	MOVLW      128
0x006A	0x00D3      	MOVWF      FARG_Lcd8_Chr_row
;__Lib_Lcd8.c,92 :: 		
0x006B	0x287F      	GOTO       L_Lcd8_Chr3
L_Lcd8_Chr2:
0x006C	0x1283      	BCF        STATUS, 5
0x006D	0x1303      	BCF        STATUS, 6
0x006E	0x0853      	MOVF       FARG_Lcd8_Chr_row, 0
0x006F	0x3A01      	XORLW      1
0x0070	0x1903      	BTFSC      STATUS, 2
0x0071	0x285B      	GOTO       L_Lcd8_Chr4
0x0072	0x0853      	MOVF       FARG_Lcd8_Chr_row, 0
0x0073	0x3A02      	XORLW      2
0x0074	0x1903      	BTFSC      STATUS, 2
0x0075	0x2860      	GOTO       L_Lcd8_Chr5
0x0076	0x0853      	MOVF       FARG_Lcd8_Chr_row, 0
0x0077	0x3A03      	XORLW      3
0x0078	0x1903      	BTFSC      STATUS, 2
0x0079	0x2863      	GOTO       L_Lcd8_Chr6
0x007A	0x0853      	MOVF       FARG_Lcd8_Chr_row, 0
0x007B	0x3A04      	XORLW      4
0x007C	0x1903      	BTFSC      STATUS, 2
0x007D	0x2866      	GOTO       L_Lcd8_Chr7
0x007E	0x2869      	GOTO       L_Lcd8_Chr8
L_Lcd8_Chr3:
;__Lib_Lcd8.c,94 :: 		
0x007F	0x0354      	DECF       FARG_Lcd8_Chr_column, 0
0x0080	0x00F0      	MOVWF      R0
0x0081	0x0853      	MOVF       FARG_Lcd8_Chr_row, 0
0x0082	0x07F0      	ADDWF      R0, 1
0x0083	0x0870      	MOVF       R0, 0
0x0084	0x00D3      	MOVWF      FARG_Lcd8_Chr_row
;__Lib_Lcd8.c,96 :: 		
0x0085	0x0870      	MOVF       R0, 0
0x0086	0x00D6      	MOVWF      FARG_Lcd8_Cmd_out_char
0x0087	0x201A      	CALL       _Lcd8_Cmd
;__Lib_Lcd8.c,98 :: 		
0x0088	0x104A      	BCF        __Lib_Lcd8_cmd_status, BitPos(__Lib_Lcd8_cmd_status+0)
;__Lib_Lcd8.c,99 :: 		
0x0089	0x0855      	MOVF       FARG_Lcd8_Chr_out_char, 0
0x008A	0x00D6      	MOVWF      FARG_Lcd8_Cmd_out_char
0x008B	0x201A      	CALL       _Lcd8_Cmd
;__Lib_Lcd8.c,100 :: 		
0x008C	0x144A      	BSF        __Lib_Lcd8_cmd_status, BitPos(__Lib_Lcd8_cmd_status+0)
;__Lib_Lcd8.c,101 :: 		
0x008D	0x0008      	RETURN
; end of _Lcd8_Chr
_Lcd8_Out:
;__Lib_Lcd8.c,156 :: 		
;__Lib_Lcd8.c,159 :: 		
0x008E	0x1283      	BCF        STATUS, 5
0x008F	0x1303      	BCF        STATUS, 6
0x0090	0x01D1      	CLRF       Lcd8_Out_i_L0
;__Lib_Lcd8.c,160 :: 		
0x0091	0x0850      	MOVF       FARG_Lcd8_Out_text, 0
0x0092	0x0084      	MOVWF      FSR
0x0093	0x0800      	MOVF       INDF, 0
0x0094	0x00D2      	MOVWF      Lcd8_Out_j_L0
;__Lib_Lcd8.c,161 :: 		
L_Lcd8_Out9:
0x0095	0x0852      	MOVF       Lcd8_Out_j_L0, 0
0x0096	0x1903      	BTFSC      STATUS, 2
0x0097	0x28AA      	GOTO       L_Lcd8_Out10
;__Lib_Lcd8.c,162 :: 		
0x0098	0x084E      	MOVF       FARG_Lcd8_Out_row, 0
0x0099	0x00D3      	MOVWF      FARG_Lcd8_Chr_row
0x009A	0x0851      	MOVF       Lcd8_Out_i_L0, 0
0x009B	0x074F      	ADDWF      FARG_Lcd8_Out_column, 0
0x009C	0x00D4      	MOVWF      FARG_Lcd8_Chr_column
0x009D	0x0851      	MOVF       Lcd8_Out_i_L0, 0
0x009E	0x0750      	ADDWF      FARG_Lcd8_Out_text, 0
0x009F	0x0084      	MOVWF      FSR
0x00A0	0x0800      	MOVF       INDF, 0
0x00A1	0x00D5      	MOVWF      FARG_Lcd8_Chr_out_char
0x00A2	0x205A      	CALL       _Lcd8_Chr
;__Lib_Lcd8.c,163 :: 		
0x00A3	0x0AD1      	INCF       Lcd8_Out_i_L0, 1
;__Lib_Lcd8.c,164 :: 		
0x00A4	0x0851      	MOVF       Lcd8_Out_i_L0, 0
0x00A5	0x0750      	ADDWF      FARG_Lcd8_Out_text, 0
0x00A6	0x0084      	MOVWF      FSR
0x00A7	0x0800      	MOVF       INDF, 0
0x00A8	0x00D2      	MOVWF      Lcd8_Out_j_L0
;__Lib_Lcd8.c,165 :: 		
0x00A9	0x2895      	GOTO       L_Lcd8_Out9
L_Lcd8_Out10:
;__Lib_Lcd8.c,166 :: 		
0x00AA	0x0008      	RETURN
; end of _Lcd8_Out
_Lcd8_Init:
;__Lib_Lcd8.c,109 :: 		
;__Lib_Lcd8.c,111 :: 		
0x00AB	0x1683      	BSF        STATUS, 5
0x00AC	0x1303      	BCF        STATUS, 6
0x00AD	0x1206      	BCF        LCD8_EN_Direction, BitPos(LCD8_EN_Direction+0)
;__Lib_Lcd8.c,112 :: 		
0x00AE	0x1106      	BCF        LCD8_RS_Direction, BitPos(LCD8_RS_Direction+0)
;__Lib_Lcd8.c,113 :: 		
0x00AF	0x1186      	BCF        LCD8_RW_Direction, BitPos(LCD8_RW_Direction+0)
;__Lib_Lcd8.c,114 :: 		
0x00B0	0x1388      	BCF        LCD8_D7_Direction, BitPos(LCD8_D7_Direction+0)
;__Lib_Lcd8.c,115 :: 		
0x00B1	0x1308      	BCF        LCD8_D6_Direction, BitPos(LCD8_D6_Direction+0)
;__Lib_Lcd8.c,116 :: 		
0x00B2	0x1288      	BCF        LCD8_D5_Direction, BitPos(LCD8_D5_Direction+0)
;__Lib_Lcd8.c,117 :: 		
0x00B3	0x1208      	BCF        LCD8_D4_Direction, BitPos(LCD8_D4_Direction+0)
;__Lib_Lcd8.c,118 :: 		
0x00B4	0x1188      	BCF        LCD8_D3_Direction, BitPos(LCD8_D3_Direction+0)
;__Lib_Lcd8.c,119 :: 		
0x00B5	0x1108      	BCF        LCD8_D2_Direction, BitPos(LCD8_D2_Direction+0)
;__Lib_Lcd8.c,120 :: 		
0x00B6	0x1088      	BCF        LCD8_D1_Direction, BitPos(LCD8_D1_Direction+0)
;__Lib_Lcd8.c,121 :: 		
0x00B7	0x1008      	BCF        LCD8_D0_Direction, BitPos(LCD8_D0_Direction+0)
;__Lib_Lcd8.c,123 :: 		
0x00B8	0x1283      	BCF        STATUS, 5
0x00B9	0x1206      	BCF        LCD8_EN, BitPos(LCD8_EN+0)
;__Lib_Lcd8.c,124 :: 		
0x00BA	0x1106      	BCF        LCD8_RS, BitPos(LCD8_RS+0)
;__Lib_Lcd8.c,125 :: 		
0x00BB	0x1186      	BCF        LCD8_RW, BitPos(LCD8_RW+0)
;__Lib_Lcd8.c,126 :: 		
0x00BC	0x1388      	BCF        LCD8_D7, BitPos(LCD8_D7+0)
;__Lib_Lcd8.c,127 :: 		
0x00BD	0x1308      	BCF        LCD8_D6, BitPos(LCD8_D6+0)
;__Lib_Lcd8.c,128 :: 		
0x00BE	0x1288      	BCF        LCD8_D5, BitPos(LCD8_D5+0)
;__Lib_Lcd8.c,129 :: 		
0x00BF	0x1208      	BCF        LCD8_D4, BitPos(LCD8_D4+0)
;__Lib_Lcd8.c,130 :: 		
0x00C0	0x1188      	BCF        LCD8_D3, BitPos(LCD8_D3+0)
;__Lib_Lcd8.c,131 :: 		
0x00C1	0x1108      	BCF        LCD8_D2, BitPos(LCD8_D2+0)
;__Lib_Lcd8.c,132 :: 		
0x00C2	0x1088      	BCF        LCD8_D1, BitPos(LCD8_D1+0)
;__Lib_Lcd8.c,133 :: 		
0x00C3	0x1008      	BCF        LCD8_D0, BitPos(LCD8_D0+0)
;__Lib_Lcd8.c,135 :: 		
0x00C4	0x200D      	CALL       _Delay_5500us
;__Lib_Lcd8.c,136 :: 		
0x00C5	0x200D      	CALL       _Delay_5500us
;__Lib_Lcd8.c,137 :: 		
0x00C6	0x200D      	CALL       _Delay_5500us
;__Lib_Lcd8.c,139 :: 		
0x00C7	0x1186      	BCF        LCD8_RW, BitPos(LCD8_RW+0)
;__Lib_Lcd8.c,140 :: 		
0x00C8	0x1683      	BSF        STATUS, 5
0x00C9	0x1106      	BCF        LCD8_RS_Direction, BitPos(LCD8_RS_Direction+0)
;__Lib_Lcd8.c,141 :: 		
0x00CA	0x1186      	BCF        LCD8_RW_Direction, BitPos(LCD8_RW_Direction+0)
;__Lib_Lcd8.c,142 :: 		
0x00CB	0x1206      	BCF        LCD8_EN_Direction, BitPos(LCD8_EN_Direction+0)
;__Lib_Lcd8.c,144 :: 		
0x00CC	0x1283      	BCF        STATUS, 5
0x00CD	0x144A      	BSF        __Lib_Lcd8_cmd_status, BitPos(__Lib_Lcd8_cmd_status+0)
;__Lib_Lcd8.c,145 :: 		
0x00CE	0x3030      	MOVLW      48
0x00CF	0x00D6      	MOVWF      FARG_Lcd8_Cmd_out_char
0x00D0	0x201A      	CALL       _Lcd8_Cmd
;__Lib_Lcd8.c,146 :: 		
0x00D1	0x3030      	MOVLW      48
0x00D2	0x00D6      	MOVWF      FARG_Lcd8_Cmd_out_char
0x00D3	0x201A      	CALL       _Lcd8_Cmd
;__Lib_Lcd8.c,147 :: 		
0x00D4	0x3030      	MOVLW      48
0x00D5	0x00D6      	MOVWF      FARG_Lcd8_Cmd_out_char
0x00D6	0x201A      	CALL       _Lcd8_Cmd
;__Lib_Lcd8.c,148 :: 		
0x00D7	0x3038      	MOVLW      56
0x00D8	0x00D6      	MOVWF      FARG_Lcd8_Cmd_out_char
0x00D9	0x201A      	CALL       _Lcd8_Cmd
;__Lib_Lcd8.c,149 :: 		
0x00DA	0x3008      	MOVLW      8
0x00DB	0x00D6      	MOVWF      FARG_Lcd8_Cmd_out_char
0x00DC	0x201A      	CALL       _Lcd8_Cmd
;__Lib_Lcd8.c,150 :: 		
0x00DD	0x3001      	MOVLW      1
0x00DE	0x00D6      	MOVWF      FARG_Lcd8_Cmd_out_char
0x00DF	0x201A      	CALL       _Lcd8_Cmd
;__Lib_Lcd8.c,151 :: 		
0x00E0	0x3006      	MOVLW      6
0x00E1	0x00D6      	MOVWF      FARG_Lcd8_Cmd_out_char
0x00E2	0x201A      	CALL       _Lcd8_Cmd
;__Lib_Lcd8.c,152 :: 		
0x00E3	0x300C      	MOVLW      12
0x00E4	0x00D6      	MOVWF      FARG_Lcd8_Cmd_out_char
0x00E5	0x201A      	CALL       _Lcd8_Cmd
;__Lib_Lcd8.c,154 :: 		
0x00E6	0x0008      	RETURN
; end of _Lcd8_Init
_Move_Delay:
;Lcd8.c,55 :: 		void Move_Delay() {                  // Function used for text moving
;Lcd8.c,56 :: 		Delay_ms(500);                     // You can change the moving speed here
0x00E7	0x3006      	MOVLW      6
0x00E8	0x1283      	BCF        STATUS, 5
0x00E9	0x1303      	BCF        STATUS, 6
0x00EA	0x00FB      	MOVWF      R11
0x00EB	0x3013      	MOVLW      19
0x00EC	0x00FC      	MOVWF      R12
0x00ED	0x30AD      	MOVLW      173
0x00EE	0x00FD      	MOVWF      R13
L_Move_Delay0:
0x00EF	0x0BFD      	DECFSZ     R13, 1
0x00F0	0x28EF      	GOTO       L_Move_Delay0
0x00F1	0x0BFC      	DECFSZ     R12, 1
0x00F2	0x28EF      	GOTO       L_Move_Delay0
0x00F3	0x0BFB      	DECFSZ     R11, 1
0x00F4	0x28EF      	GOTO       L_Move_Delay0
0x00F5	0x0000      	NOP
0x00F6	0x0000      	NOP
;Lcd8.c,57 :: 		}
L_end_Move_Delay:
0x00F7	0x0008      	RETURN
; end of _Move_Delay
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x00F8	0x2053      	CALL       _____DoICP
0x00F9	0x118A      	BCF        PCLATH, 3
0x00FA	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x00FB	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x00FC	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x00FD	0x0ACC      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x00FE	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x00FF	0x0ACD      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0100	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0101	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0102	0x28F8      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0103	0x0008      	RETURN
; end of ___CC2DW
_main:
0x0104	0x219E      	CALL       414
;Lcd8.c,59 :: 		void main(){
;Lcd8.c,60 :: 		ANSEL  = 0;                        // Configure AN pins as digital I/O
0x0105	0x1683      	BSF        STATUS, 5
0x0106	0x1703      	BSF        STATUS, 6
0x0107	0x0188      	CLRF       ANSEL
;Lcd8.c,61 :: 		ANSELH = 0;
0x0108	0x0189      	CLRF       ANSELH
;Lcd8.c,62 :: 		C1ON_bit = 0;                      // Disable comparators
0x0109	0x1283      	BCF        STATUS, 5
0x010A	0x1387      	BCF        C1ON_bit, BitPos(C1ON_bit+0)
;Lcd8.c,63 :: 		C2ON_bit = 0;
0x010B	0x1388      	BCF        C2ON_bit, BitPos(C2ON_bit+0)
;Lcd8.c,65 :: 		Lcd8_Init();                       // Initialize Lcd8
0x010C	0x20AB      	CALL       _Lcd8_Init
;Lcd8.c,67 :: 		Lcd8_Cmd(_LCD_CLEAR);              // Clear display
0x010D	0x3001      	MOVLW      1
0x010E	0x00D6      	MOVWF      FARG_Lcd8_Cmd_out_char
0x010F	0x201A      	CALL       _Lcd8_Cmd
;Lcd8.c,68 :: 		Lcd8_Cmd(_LCD_CURSOR_OFF);         // Cursor off
0x0110	0x300C      	MOVLW      12
0x0111	0x00D6      	MOVWF      FARG_Lcd8_Cmd_out_char
0x0112	0x201A      	CALL       _Lcd8_Cmd
;Lcd8.c,69 :: 		Lcd8_Out(1,6,txt3);                // Write text in first row
0x0113	0x3001      	MOVLW      1
0x0114	0x00CE      	MOVWF      FARG_Lcd8_Out_row
0x0115	0x3006      	MOVLW      6
0x0116	0x00CF      	MOVWF      FARG_Lcd8_Out_column
0x0117	0x3042      	MOVLW      _txt3
0x0118	0x00D0      	MOVWF      FARG_Lcd8_Out_text
0x0119	0x208E      	CALL       _Lcd8_Out
;Lcd8.c,71 :: 		Lcd8_Out(2,6,txt4);                // Write text in second row
0x011A	0x3002      	MOVLW      2
0x011B	0x00CE      	MOVWF      FARG_Lcd8_Out_row
0x011C	0x3006      	MOVLW      6
0x011D	0x00CF      	MOVWF      FARG_Lcd8_Out_column
0x011E	0x3031      	MOVLW      _txt4
0x011F	0x00D0      	MOVWF      FARG_Lcd8_Out_text
0x0120	0x208E      	CALL       _Lcd8_Out
;Lcd8.c,72 :: 		Delay_ms(2000);
0x0121	0x3015      	MOVLW      21
0x0122	0x00FB      	MOVWF      R11
0x0123	0x304B      	MOVLW      75
0x0124	0x00FC      	MOVWF      R12
0x0125	0x30BE      	MOVLW      190
0x0126	0x00FD      	MOVWF      R13
L_main1:
0x0127	0x0BFD      	DECFSZ     R13, 1
0x0128	0x2927      	GOTO       L_main1
0x0129	0x0BFC      	DECFSZ     R12, 1
0x012A	0x2927      	GOTO       L_main1
0x012B	0x0BFB      	DECFSZ     R11, 1
0x012C	0x2927      	GOTO       L_main1
0x012D	0x0000      	NOP
;Lcd8.c,73 :: 		Lcd8_Cmd(_LCD_CLEAR);              // Clear display
0x012E	0x3001      	MOVLW      1
0x012F	0x00D6      	MOVWF      FARG_Lcd8_Cmd_out_char
0x0130	0x201A      	CALL       _Lcd8_Cmd
;Lcd8.c,75 :: 		Lcd8_Out(1,1,txt1);                // Write text in first row
0x0131	0x3001      	MOVLW      1
0x0132	0x00CE      	MOVWF      FARG_Lcd8_Out_row
0x0133	0x3001      	MOVLW      1
0x0134	0x00CF      	MOVWF      FARG_Lcd8_Out_column
0x0135	0x3020      	MOVLW      _txt1
0x0136	0x00D0      	MOVWF      FARG_Lcd8_Out_text
0x0137	0x208E      	CALL       _Lcd8_Out
;Lcd8.c,76 :: 		Lcd8_Out(2,5,txt2);                // Write text in second row
0x0138	0x3002      	MOVLW      2
0x0139	0x00CE      	MOVWF      FARG_Lcd8_Out_row
0x013A	0x3005      	MOVLW      5
0x013B	0x00CF      	MOVWF      FARG_Lcd8_Out_column
0x013C	0x3039      	MOVLW      _txt2
0x013D	0x00D0      	MOVWF      FARG_Lcd8_Out_text
0x013E	0x208E      	CALL       _Lcd8_Out
;Lcd8.c,78 :: 		Delay_ms(2000);
0x013F	0x3015      	MOVLW      21
0x0140	0x00FB      	MOVWF      R11
0x0141	0x304B      	MOVLW      75
0x0142	0x00FC      	MOVWF      R12
0x0143	0x30BE      	MOVLW      190
0x0144	0x00FD      	MOVWF      R13
L_main2:
0x0145	0x0BFD      	DECFSZ     R13, 1
0x0146	0x2945      	GOTO       L_main2
0x0147	0x0BFC      	DECFSZ     R12, 1
0x0148	0x2945      	GOTO       L_main2
0x0149	0x0BFB      	DECFSZ     R11, 1
0x014A	0x2945      	GOTO       L_main2
0x014B	0x0000      	NOP
;Lcd8.c,81 :: 		for(i=0; i<4; i++) {               // Move text to the right 4 times
0x014C	0x01CB      	CLRF       _i
L_main3:
0x014D	0x3004      	MOVLW      4
0x014E	0x024B      	SUBWF      _i, 0
0x014F	0x1803      	BTFSC      STATUS, 0
0x0150	0x2957      	GOTO       L_main4
;Lcd8.c,82 :: 		Lcd8_Cmd(_LCD_SHIFT_RIGHT);
0x0151	0x301C      	MOVLW      28
0x0152	0x00D6      	MOVWF      FARG_Lcd8_Cmd_out_char
0x0153	0x201A      	CALL       _Lcd8_Cmd
;Lcd8.c,83 :: 		Move_Delay();
0x0154	0x20E7      	CALL       _Move_Delay
;Lcd8.c,81 :: 		for(i=0; i<4; i++) {               // Move text to the right 4 times
0x0155	0x0ACB      	INCF       _i, 1
;Lcd8.c,84 :: 		}
0x0156	0x294D      	GOTO       L_main3
L_main4:
;Lcd8.c,86 :: 		while(1) {                         // Endless loop
L_main6:
;Lcd8.c,87 :: 		for(i=0; i<8; i++) {             // Move text to the left 7 times
0x0157	0x01CB      	CLRF       _i
L_main8:
0x0158	0x3008      	MOVLW      8
0x0159	0x024B      	SUBWF      _i, 0
0x015A	0x1803      	BTFSC      STATUS, 0
0x015B	0x2962      	GOTO       L_main9
;Lcd8.c,88 :: 		Lcd8_Cmd(_LCD_SHIFT_LEFT);
0x015C	0x3018      	MOVLW      24
0x015D	0x00D6      	MOVWF      FARG_Lcd8_Cmd_out_char
0x015E	0x201A      	CALL       _Lcd8_Cmd
;Lcd8.c,89 :: 		Move_Delay();
0x015F	0x20E7      	CALL       _Move_Delay
;Lcd8.c,87 :: 		for(i=0; i<8; i++) {             // Move text to the left 7 times
0x0160	0x0ACB      	INCF       _i, 1
;Lcd8.c,90 :: 		}
0x0161	0x2958      	GOTO       L_main8
L_main9:
;Lcd8.c,92 :: 		for(i=0; i<8; i++) {             // Move text to the right 7 times
0x0162	0x01CB      	CLRF       _i
L_main11:
0x0163	0x3008      	MOVLW      8
0x0164	0x024B      	SUBWF      _i, 0
0x0165	0x1803      	BTFSC      STATUS, 0
0x0166	0x296D      	GOTO       L_main12
;Lcd8.c,93 :: 		Lcd8_Cmd(_LCD_SHIFT_RIGHT);
0x0167	0x301C      	MOVLW      28
0x0168	0x00D6      	MOVWF      FARG_Lcd8_Cmd_out_char
0x0169	0x201A      	CALL       _Lcd8_Cmd
;Lcd8.c,94 :: 		Move_Delay();
0x016A	0x20E7      	CALL       _Move_Delay
;Lcd8.c,92 :: 		for(i=0; i<8; i++) {             // Move text to the right 7 times
0x016B	0x0ACB      	INCF       _i, 1
;Lcd8.c,95 :: 		}
0x016C	0x2963      	GOTO       L_main11
L_main12:
;Lcd8.c,96 :: 		}
0x016D	0x2957      	GOTO       L_main6
;Lcd8.c,97 :: 		}
L_end_main:
0x016E	0x296E      	GOTO       $+0
; end of _main
0x019E	0x3020      	MOVLW      32
0x019F	0x0084      	MOVWF      FSR
0x01A0	0x302A      	MOVLW      42
0x01A1	0x1283      	BCF        STATUS, 5
0x01A2	0x1303      	BCF        STATUS, 6
0x01A3	0x00F0      	MOVWF      R0
0x01A4	0x3074      	MOVLW      116
0x01A5	0x00CC      	MOVWF      ___DoICPAddr
0x01A6	0x3001      	MOVLW      1
0x01A7	0x00CD      	MOVWF      77
0x01A8	0x20F8      	CALL       248
0x01A9	0x0008      	RETURN
;Lcd8.c,0 :: ?ICS_txt1
0x0174	0x346D ;?ICS_txt1+0
0x0175	0x3469 ;?ICS_txt1+1
0x0176	0x346B ;?ICS_txt1+2
0x0177	0x3472 ;?ICS_txt1+3
0x0178	0x346F ;?ICS_txt1+4
0x0179	0x3445 ;?ICS_txt1+5
0x017A	0x346C ;?ICS_txt1+6
0x017B	0x3465 ;?ICS_txt1+7
0x017C	0x346B ;?ICS_txt1+8
0x017D	0x3474 ;?ICS_txt1+9
0x017E	0x3472 ;?ICS_txt1+10
0x017F	0x346F ;?ICS_txt1+11
0x0180	0x346E ;?ICS_txt1+12
0x0181	0x3469 ;?ICS_txt1+13
0x0182	0x346B ;?ICS_txt1+14
0x0183	0x3461 ;?ICS_txt1+15
0x0184	0x3400 ;?ICS_txt1+16
; end of ?ICS_txt1
;Lcd8.c,0 :: ?ICS_txt4
0x0185	0x3465 ;?ICS_txt4+0
0x0186	0x3478 ;?ICS_txt4+1
0x0187	0x3461 ;?ICS_txt4+2
0x0188	0x346D ;?ICS_txt4+3
0x0189	0x3470 ;?ICS_txt4+4
0x018A	0x346C ;?ICS_txt4+5
0x018B	0x3465 ;?ICS_txt4+6
0x018C	0x3400 ;?ICS_txt4+7
; end of ?ICS_txt4
;Lcd8.c,0 :: ?ICS_txt2
0x018D	0x3445 ;?ICS_txt2+0
0x018E	0x3461 ;?ICS_txt2+1
0x018F	0x3473 ;?ICS_txt2+2
0x0190	0x3479 ;?ICS_txt2+3
0x0191	0x3450 ;?ICS_txt2+4
0x0192	0x3449 ;?ICS_txt2+5
0x0193	0x3443 ;?ICS_txt2+6
0x0194	0x3435 ;?ICS_txt2+7
0x0195	0x3400 ;?ICS_txt2+8
; end of ?ICS_txt2
;Lcd8.c,0 :: ?ICS_txt3
0x0196	0x344C ;?ICS_txt3+0
0x0197	0x3463 ;?ICS_txt3+1
0x0198	0x3464 ;?ICS_txt3+2
0x0199	0x3438 ;?ICS_txt3+3
0x019A	0x3462 ;?ICS_txt3+4
0x019B	0x3469 ;?ICS_txt3+5
0x019C	0x3474 ;?ICS_txt3+6
0x019D	0x3400 ;?ICS_txt3+7
; end of ?ICS_txt3
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003       [7]    _Delay_50us
0x000A       [3]    _Delay_1us
0x000D      [13]    _Delay_5500us
0x001A      [57]    _Lcd8_Cmd
0x0053       [7]    _____DoICP
0x005A      [52]    _Lcd8_Chr
0x008E      [29]    _Lcd8_Out
0x00AB      [60]    _Lcd8_Init
0x00E7      [17]    _Move_Delay
0x00F8      [12]    ___CC2DW
0x0104     [106]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [0]    RB2_bit
0x0006       [0]    LCD8_EN
0x0006       [0]    RB4_bit
0x0006       [0]    LCD8_RW
0x0006       [0]    LCD8_RS
0x0006       [0]    RB3_bit
0x0008       [0]    LCD8_D3
0x0008       [0]    LCD8_D2
0x0008       [0]    LCD8_D4
0x0008       [0]    RD2_bit
0x0008       [0]    RD3_bit
0x0008       [0]    RD4_bit
0x0008       [0]    RD1_bit
0x0008       [0]    LCD8_D0
0x0008       [0]    RD0_bit
0x0008       [0]    RD7_bit
0x0008       [0]    LCD8_D5
0x0008       [0]    LCD8_D6
0x0008       [0]    RD6_bit
0x0008       [0]    LCD8_D1
0x0008       [0]    RD5_bit
0x0008       [0]    LCD8_D7
0x000A       [1]    PCLATH
0x0020      [17]    _txt1
0x0031       [8]    _txt4
0x0039       [9]    _txt2
0x0042       [8]    _txt3
0x004A       [0]    __Lib_Lcd8_cmd_status
0x004B       [1]    _i
0x004C       [2]    ___DoICPAddr
0x004E       [1]    FARG_Lcd8_Out_row
0x004F       [1]    FARG_Lcd8_Out_column
0x0050       [1]    FARG_Lcd8_Out_text
0x0051       [1]    Lcd8_Out_i_L0
0x0052       [1]    Lcd8_Out_j_L0
0x0053       [1]    FARG_Lcd8_Chr_row
0x0054       [1]    FARG_Lcd8_Chr_column
0x0055       [1]    FARG_Lcd8_Chr_out_char
0x0056       [1]    FARG_Lcd8_Cmd_out_char
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0086       [0]    LCD8_RS_Direction
0x0086       [0]    LCD8_EN_Direction
0x0086       [0]    LCD8_RW_Direction
0x0086       [0]    TRISB3_bit
0x0086       [0]    TRISB4_bit
0x0086       [0]    TRISB2_bit
0x0088       [0]    TRISD3_bit
0x0088       [0]    TRISD2_bit
0x0088       [0]    TRISD4_bit
0x0088       [0]    LCD8_D5_Direction
0x0088       [0]    LCD8_D6_Direction
0x0088       [0]    LCD8_D7_Direction
0x0088       [0]    TRISD1_bit
0x0088       [0]    TRISD0_bit
0x0088       [0]    LCD8_D4_Direction
0x0088       [0]    LCD8_D2_Direction
0x0088       [0]    LCD8_D0_Direction
0x0088       [0]    LCD8_D1_Direction
0x0088       [0]    LCD8_D3_Direction
0x0088       [0]    TRISD5_bit
0x0088       [0]    TRISD7_bit
0x0088       [0]    TRISD6_bit
0x0107       [0]    C1ON_bit
0x0108       [0]    C2ON_bit
0x0188       [1]    ANSEL
0x0189       [1]    ANSELH
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0174      [17]    ?ICS_txt1
0x0185       [8]    ?ICS_txt4
0x018D       [9]    ?ICS_txt2
0x0196       [8]    ?ICS_txt3
//** Label List: ** 
//----------------------------------------------
  L_Move_Delay0
  L_main1
  L_main2
  L_main3
  L_main4
  L_main5
  L_main6
  L_main7
  L_main8
  L_main9
  L_main10
  L_main11
  L_main12
  L_main13
  L_end_Move_Delay
  _Move_Delay
  L_end_main
  _main
  L_Delay_10us0
  L_Delay_22us1
  L_Delay_50us2
  L_Delay_80us3
  L_Delay_500us4
  L_Delay_5500us5
  L_Delay_1ms6
  L_Delay_5ms7
  L_Delay_8ms8
  L_Delay_10ms9
  L_Delay_100ms10
  L_Delay_1sec11
  L_boot16_Delay_5ms12
  L_Delay_Cyc13
  L_Delay_Cyc14
  L_VDelay_ms15
  L_VDelay_ms16
  L_VDelay_ms17
  L_VDelay_Advanced_ms18
  L_VDelay_Advanced_ms19
  L_VDelay_Advanced_ms20
  L_end_Get_Fosc_kHz
  _Get_Fosc_kHz
  L_end_Delay_1us
  _Delay_1us
  L_end_Delay_10us
  _Delay_10us
  L_end_Delay_22us
  _Delay_22us
  L_end_Delay_50us
  _Delay_50us
  L_end_Delay_80us
  _Delay_80us
  L_end_Delay_500us
  _Delay_500us
  L_end_Delay_5500us
  _Delay_5500us
  L_end_Delay_1ms
  _Delay_1ms
  L_end_Delay_5ms
  _Delay_5ms
  L_end_Delay_8ms
  _Delay_8ms
  L_end_Delay_10ms
  _Delay_10ms
  L_end_Delay_100ms
  _Delay_100ms
  L_end_Delay_1sec
  _Delay_1sec
  L_end_boot16_Delay_5ms
  _boot16_Delay_5ms
  L_end_Delay_Cyc
  _Delay_Cyc
  L_end_VDelay_ms
  _VDelay_ms
  L__VDelay_ms38
  L__VDelay_ms39
  L__VDelay_ms40
  L_end_VDelay_Advanced_ms
  _VDelay_Advanced_ms
  L__VDelay_Advanced_ms42
  L__VDelay_Advanced_ms43
  L__VDelay_Advanced_ms44
  L_Lcd8_Cmd0
  L_Lcd8_Cmd1
  L_Lcd8_Chr2
  L_Lcd8_Chr3
  L_Lcd8_Chr4
  L_Lcd8_Chr5
  L_Lcd8_Chr6
  L_Lcd8_Chr7
  L_Lcd8_Chr8
  L_Lcd8_Out9
  L_Lcd8_Out10
  L_Lcd8_Out_CP11
  L_Lcd8_Out_CP12
  _Lcd8_Cmd
  L__Lcd8_Cmd13
  L__Lcd8_Cmd14
  L__Lcd8_Cmd15
  L__Lcd8_Cmd16
  L__Lcd8_Cmd17
  L__Lcd8_Cmd18
  L__Lcd8_Cmd19
  L__Lcd8_Cmd20
  L__Lcd8_Cmd21
  L__Lcd8_Cmd22
  L__Lcd8_Cmd23
  L__Lcd8_Cmd24
  L__Lcd8_Cmd25
  L__Lcd8_Cmd26
  L__Lcd8_Cmd27
  L__Lcd8_Cmd28
  L__Lcd8_Cmd29
  L__Lcd8_Cmd30
  _Lcd8_Chr
  _Lcd8_Chr_CP
  _Lcd8_Init
  _Lcd8_Out
  _Lcd8_Out_CP
  L_loopCA2AWs
  L_CA2AWend
  _CCA2AW_Loop1
  L_loopCS2Ss
  L_CS2Send
  _CCS2S_Loop1
  L_CCS2Send
  L_loopFZinSWs
  L_FZinSend
  _CC2D_Loop1
  L_end_____DoICP
  _____DoICP
  L_end_____DoIFC
  _____DoIFC
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end___CC2DW
  ___CC2DW
  L_end_Swap
  _Swap
