;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 06/11/2017 20:23:32
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2949      	GOTO       329
_ToggleEpinOfLCD:
;LCD_HD44780.c,22 :: 		void ToggleEpinOfLCD(void){
;LCD_HD44780.c,23 :: 		LCD_EN = 1;                // Give a pulse on E pin
0x0003	0x1283      	BCF        STATUS, 5
0x0004	0x1303      	BCF        STATUS, 6
0x0005	0x1488      	BSF        PORTD, 1
;LCD_HD44780.c,24 :: 		Delay_us(E_Delay);         // so that LCD can latch the
0x0006	0x3021      	MOVLW      33
0x0007	0x00FD      	MOVWF      R13
L_ToggleEpinOfLCD0:
0x0008	0x0BFD      	DECFSZ     R13, 1
0x0009	0x2808      	GOTO       L_ToggleEpinOfLCD0
;LCD_HD44780.c,25 :: 		LCD_EN = 0;                // data from data bus
0x000A	0x1088      	BCF        PORTD, 1
;LCD_HD44780.c,26 :: 		Delay_us(E_Delay);
0x000B	0x3021      	MOVLW      33
0x000C	0x00FD      	MOVWF      R13
L_ToggleEpinOfLCD1:
0x000D	0x0BFD      	DECFSZ     R13, 1
0x000E	0x280D      	GOTO       L_ToggleEpinOfLCD1
;LCD_HD44780.c,27 :: 		}
L_end_ToggleEpinOfLCD:
0x000F	0x0008      	RETURN
; end of _ToggleEpinOfLCD
_WriteCommandToLCD:
;LCD_HD44780.c,31 :: 		void WriteCommandToLCD(unsigned char Command){
;LCD_HD44780.c,32 :: 		LCD_RS = 0;                          // It is a command
0x0010	0x1283      	BCF        STATUS, 5
0x0011	0x1303      	BCF        STATUS, 6
0x0012	0x1008      	BCF        PORTD, 0
;LCD_HD44780.c,33 :: 		LCD_PORT &= 0x0F;                    // Make Data pins zero
0x0013	0x300F      	MOVLW      15
0x0014	0x0588      	ANDWF      PORTD, 1
;LCD_HD44780.c,34 :: 		LCD_PORT |= (Command&0xF0);          // Write Upper nibble of data
0x0015	0x30F0      	MOVLW      240
0x0016	0x0528      	ANDWF      FARG_WriteCommandToLCD_Command, 0
0x0017	0x00F0      	MOVWF      R0
0x0018	0x0870      	MOVF       R0, 0
0x0019	0x0488      	IORWF      PORTD, 1
;LCD_HD44780.c,35 :: 		ToggleEpinOfLCD();                   // Give pulse on E pin
0x001A	0x2003      	CALL       _ToggleEpinOfLCD
;LCD_HD44780.c,36 :: 		LCD_PORT &= 0x0F;                    // Make Data pins zero
0x001B	0x300F      	MOVLW      15
0x001C	0x0588      	ANDWF      PORTD, 1
;LCD_HD44780.c,37 :: 		LCD_PORT |= ((Command<<4)&0xF0);     // Write Lower nibble of data
0x001D	0x0828      	MOVF       FARG_WriteCommandToLCD_Command, 0
0x001E	0x00F0      	MOVWF      R0
0x001F	0x0DF0      	RLF        R0, 1
0x0020	0x1070      	BCF        R0, 0
0x0021	0x0DF0      	RLF        R0, 1
0x0022	0x1070      	BCF        R0, 0
0x0023	0x0DF0      	RLF        R0, 1
0x0024	0x1070      	BCF        R0, 0
0x0025	0x0DF0      	RLF        R0, 1
0x0026	0x1070      	BCF        R0, 0
0x0027	0x30F0      	MOVLW      240
0x0028	0x05F0      	ANDWF      R0, 1
0x0029	0x0870      	MOVF       R0, 0
0x002A	0x0488      	IORWF      PORTD, 1
;LCD_HD44780.c,38 :: 		ToggleEpinOfLCD();                   // Give pulse on E pin
0x002B	0x2003      	CALL       _ToggleEpinOfLCD
;LCD_HD44780.c,39 :: 		}
L_end_WriteCommandToLCD:
0x002C	0x0008      	RETURN
; end of _WriteCommandToLCD
_WriteDataToLCD:
;LCD_HD44780.c,44 :: 		void WriteDataToLCD(char LCDChar){
;LCD_HD44780.c,45 :: 		LCD_RS = 1;                           // It is data
0x002D	0x1283      	BCF        STATUS, 5
0x002E	0x1303      	BCF        STATUS, 6
0x002F	0x1408      	BSF        PORTD, 0
;LCD_HD44780.c,46 :: 		LCD_PORT &= 0x0F;                     // Make Data pins zero
0x0030	0x300F      	MOVLW      15
0x0031	0x0588      	ANDWF      PORTD, 1
;LCD_HD44780.c,47 :: 		LCD_PORT |= (LCDChar&0xF0);           // Write Upper nibble of data
0x0032	0x30F0      	MOVLW      240
0x0033	0x0528      	ANDWF      FARG_WriteDataToLCD_LCDChar, 0
0x0034	0x00F0      	MOVWF      R0
0x0035	0x0870      	MOVF       R0, 0
0x0036	0x0488      	IORWF      PORTD, 1
;LCD_HD44780.c,48 :: 		ToggleEpinOfLCD();                    // Give pulse on E pin
0x0037	0x2003      	CALL       _ToggleEpinOfLCD
;LCD_HD44780.c,49 :: 		LCD_PORT &= 0x0F;                     // Make Data pins zero
0x0038	0x300F      	MOVLW      15
0x0039	0x0588      	ANDWF      PORTD, 1
;LCD_HD44780.c,50 :: 		LCD_PORT |= ((LCDChar<<4)&0xF0);      // Write Lower nibble of data
0x003A	0x0828      	MOVF       FARG_WriteDataToLCD_LCDChar, 0
0x003B	0x00F0      	MOVWF      R0
0x003C	0x0DF0      	RLF        R0, 1
0x003D	0x1070      	BCF        R0, 0
0x003E	0x0DF0      	RLF        R0, 1
0x003F	0x1070      	BCF        R0, 0
0x0040	0x0DF0      	RLF        R0, 1
0x0041	0x1070      	BCF        R0, 0
0x0042	0x0DF0      	RLF        R0, 1
0x0043	0x1070      	BCF        R0, 0
0x0044	0x30F0      	MOVLW      240
0x0045	0x05F0      	ANDWF      R0, 1
0x0046	0x0870      	MOVF       R0, 0
0x0047	0x0488      	IORWF      PORTD, 1
;LCD_HD44780.c,51 :: 		ToggleEpinOfLCD();                    // Give pulse on E pin
0x0048	0x2003      	CALL       _ToggleEpinOfLCD
;LCD_HD44780.c,52 :: 		}
L_end_WriteDataToLCD:
0x0049	0x0008      	RETURN
; end of _WriteDataToLCD
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x004A	0x1283      	BCF        STATUS, 5
0x004B	0x1303      	BCF        STATUS, 6
0x004C	0x0823      	MOVF       ___DoICPAddr+1, 0
0x004D	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x004E	0x0822      	MOVF       ___DoICPAddr, 0
0x004F	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0050	0x0008      	RETURN
; end of _____DoICP
_WriteStringToLCD:
;LCD_HD44780.c,97 :: 		void WriteStringToLCD(const char *s){
;LCD_HD44780.c,98 :: 		while(*s) WriteDataToLCD(*s++);   // print first character on LCD
L_WriteStringToLCD7:
0x0051	0x1283      	BCF        STATUS, 5
0x0052	0x1303      	BCF        STATUS, 6
0x0053	0x0826      	MOVF       FARG_WriteStringToLCD_s, 0
0x0054	0x00A2      	MOVWF      ___DoICPAddr
0x0055	0x0827      	MOVF       FARG_WriteStringToLCD_s+1, 0
0x0056	0x00A3      	MOVWF      ___DoICPAddr+1
0x0057	0x204A      	CALL       _____DoICP
0x0058	0x118A      	BCF        PCLATH, 3
0x0059	0x120A      	BCF        PCLATH, 4
0x005A	0x00F0      	MOVWF      R0
0x005B	0x0870      	MOVF       R0, 0
0x005C	0x1903      	BTFSC      STATUS, 2
0x005D	0x286B      	GOTO       L_WriteStringToLCD8
0x005E	0x0826      	MOVF       FARG_WriteStringToLCD_s, 0
0x005F	0x00A2      	MOVWF      ___DoICPAddr
0x0060	0x0827      	MOVF       FARG_WriteStringToLCD_s+1, 0
0x0061	0x00A3      	MOVWF      ___DoICPAddr+1
0x0062	0x204A      	CALL       _____DoICP
0x0063	0x118A      	BCF        PCLATH, 3
0x0064	0x120A      	BCF        PCLATH, 4
0x0065	0x00A8      	MOVWF      FARG_WriteDataToLCD_LCDChar
0x0066	0x202D      	CALL       _WriteDataToLCD
0x0067	0x0AA6      	INCF       FARG_WriteStringToLCD_s, 1
0x0068	0x1903      	BTFSC      STATUS, 2
0x0069	0x0AA7      	INCF       FARG_WriteStringToLCD_s+1, 1
0x006A	0x2851      	GOTO       L_WriteStringToLCD7
L_WriteStringToLCD8:
;LCD_HD44780.c,99 :: 		}
L_end_WriteStringToLCD:
0x006B	0x0008      	RETURN
; end of _WriteStringToLCD
_GotoYXPositionOnLCD:
;LCD_HD44780.c,113 :: 		void GotoYXPositionOnLCD(unsigned char LineNumber, unsigned char OFFSET)   // LineNumber can have two values, LCD_LINE1 and LCD_LINE2
;LCD_HD44780.c,115 :: 		WriteCommandToLCD(0x80|((LineNumber*0x40)+OFFSET));                    // Line1 is from 0x0 to 0x27 and Line2 is from 0x40 to 0x67
0x006C	0x3006      	MOVLW      6
0x006D	0x1283      	BCF        STATUS, 5
0x006E	0x1303      	BCF        STATUS, 6
0x006F	0x00F1      	MOVWF      R1
0x0070	0x0826      	MOVF       FARG_GotoYXPositionOnLCD_LineNumber, 0
0x0071	0x00F0      	MOVWF      R0
0x0072	0x0871      	MOVF       R1, 0
L__GotoYXPositionOnLCD18:
0x0073	0x1903      	BTFSC      STATUS, 2
0x0074	0x2879      	GOTO       L__GotoYXPositionOnLCD19
0x0075	0x0DF0      	RLF        R0, 1
0x0076	0x1070      	BCF        R0, 0
0x0077	0x3EFF      	ADDLW      255
0x0078	0x2873      	GOTO       L__GotoYXPositionOnLCD18
L__GotoYXPositionOnLCD19:
0x0079	0x0827      	MOVF       FARG_GotoYXPositionOnLCD_OFFSET, 0
0x007A	0x07F0      	ADDWF      R0, 1
0x007B	0x3080      	MOVLW      128
0x007C	0x0470      	IORWF      R0, 0
0x007D	0x00A8      	MOVWF      FARG_WriteCommandToLCD_Command
0x007E	0x2010      	CALL       _WriteCommandToLCD
;LCD_HD44780.c,116 :: 		}
L_end_GotoYXPositionOnLCD:
0x007F	0x0008      	RETURN
; end of _GotoYXPositionOnLCD
_WriteLCDLine1:
;LCD_HD44780.c,121 :: 		void WriteLCDLine1(const char *s)    // length of s should be 16 for 16x2 LCD and 20 for 20x2 LCD
;LCD_HD44780.c,123 :: 		GotoYXPositionOnLCD(LCD_LINE1, 0);     // Goto 0,0 location
0x0080	0x1283      	BCF        STATUS, 5
0x0081	0x1303      	BCF        STATUS, 6
0x0082	0x01A6      	CLRF       FARG_GotoYXPositionOnLCD_LineNumber
0x0083	0x01A7      	CLRF       FARG_GotoYXPositionOnLCD_OFFSET
0x0084	0x206C      	CALL       _GotoYXPositionOnLCD
;LCD_HD44780.c,124 :: 		WriteStringToLCD(s);
0x0085	0x0824      	MOVF       FARG_WriteLCDLine1_s, 0
0x0086	0x00A6      	MOVWF      FARG_WriteStringToLCD_s
0x0087	0x0825      	MOVF       FARG_WriteLCDLine1_s+1, 0
0x0088	0x00A7      	MOVWF      FARG_WriteStringToLCD_s+1
0x0089	0x2051      	CALL       _WriteStringToLCD
;LCD_HD44780.c,125 :: 		}
L_end_WriteLCDLine1:
0x008A	0x0008      	RETURN
; end of _WriteLCDLine1
_ClearLCDScreen:
;LCD_HD44780.c,104 :: 		void ClearLCDScreen(void)       // Clear the Screen and return cursor to zero position
;LCD_HD44780.c,106 :: 		WriteCommandToLCD(0x01);    // Clear the screen
0x008B	0x3001      	MOVLW      1
0x008C	0x1283      	BCF        STATUS, 5
0x008D	0x1303      	BCF        STATUS, 6
0x008E	0x00A8      	MOVWF      FARG_WriteCommandToLCD_Command
0x008F	0x2010      	CALL       _WriteCommandToLCD
;LCD_HD44780.c,107 :: 		Delay_ms(2);              // Delay for cursor to return at zero position
0x0090	0x3003      	MOVLW      3
0x0091	0x00FC      	MOVWF      R12
0x0092	0x3097      	MOVLW      151
0x0093	0x00FD      	MOVWF      R13
L_ClearLCDScreen9:
0x0094	0x0BFD      	DECFSZ     R13, 1
0x0095	0x2894      	GOTO       L_ClearLCDScreen9
0x0096	0x0BFC      	DECFSZ     R12, 1
0x0097	0x2894      	GOTO       L_ClearLCDScreen9
0x0098	0x0000      	NOP
0x0099	0x0000      	NOP
;LCD_HD44780.c,108 :: 		}
L_end_ClearLCDScreen:
0x009A	0x0008      	RETURN
; end of _ClearLCDScreen
_WriteLCDLine2:
;LCD_HD44780.c,130 :: 		void WriteLCDLine2(const char *s)    // length of s should be 16 for 16x2 LCD and 20 for 20x2 LCD
;LCD_HD44780.c,132 :: 		GotoYXPositionOnLCD(LCD_LINE2, 0);     // Goto 1,0 location
0x009B	0x3001      	MOVLW      1
0x009C	0x1283      	BCF        STATUS, 5
0x009D	0x1303      	BCF        STATUS, 6
0x009E	0x00A6      	MOVWF      FARG_GotoYXPositionOnLCD_LineNumber
0x009F	0x01A7      	CLRF       FARG_GotoYXPositionOnLCD_OFFSET
0x00A0	0x206C      	CALL       _GotoYXPositionOnLCD
;LCD_HD44780.c,133 :: 		WriteStringToLCD(s);
0x00A1	0x0824      	MOVF       FARG_WriteLCDLine2_s, 0
0x00A2	0x00A6      	MOVWF      FARG_WriteStringToLCD_s
0x00A3	0x0825      	MOVF       FARG_WriteLCDLine2_s+1, 0
0x00A4	0x00A7      	MOVWF      FARG_WriteStringToLCD_s+1
0x00A5	0x2051      	CALL       _WriteStringToLCD
;LCD_HD44780.c,134 :: 		}
L_end_WriteLCDLine2:
0x00A6	0x0008      	RETURN
; end of _WriteLCDLine2
_Div_16x16_U:
;__Lib_Math.c,215 :: 		
;__Lib_Math.c,222 :: 		
0x00A7	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,223 :: 		
0x00A8	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,224 :: 		
0x00A9	0x01F8      	CLRF       R8
;__Lib_Math.c,225 :: 		
0x00AA	0x01F9      	CLRF       R9
;__Lib_Math.c,226 :: 		
0x00AB	0x3010      	MOVLW      16
;__Lib_Math.c,227 :: 		
0x00AC	0x00FC      	MOVWF      R12
;__Lib_Math.c,228 :: 		
0x00AD	0x0D71      	RLF        R1, 0
;__Lib_Math.c,229 :: 		
0x00AE	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,230 :: 		
0x00AF	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,231 :: 		
0x00B0	0x0874      	MOVF       R4, 0
;__Lib_Math.c,232 :: 		
0x00B1	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,233 :: 		
0x00B2	0x0875      	MOVF       R5, 0
;__Lib_Math.c,234 :: 		
0x00B3	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,235 :: 		
0x00B4	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,236 :: 		
0x00B5	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,237 :: 		
0x00B6	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,238 :: 		
0x00B7	0x28BF      	GOTO       $+8
;__Lib_Math.c,239 :: 		
0x00B8	0x0874      	MOVF       R4, 0
;__Lib_Math.c,240 :: 		
0x00B9	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,241 :: 		
0x00BA	0x0875      	MOVF       R5, 0
;__Lib_Math.c,242 :: 		
0x00BB	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,243 :: 		
0x00BC	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,244 :: 		
0x00BD	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,245 :: 		
0x00BE	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,246 :: 		
0x00BF	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,247 :: 		
0x00C0	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,248 :: 		
0x00C1	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,249 :: 		
0x00C2	0x28AD      	GOTO       $-21
;__Lib_Math.c,251 :: 		
L_end_Div_16x16_U:
0x00C3	0x0008      	RETURN
; end of _Div_16x16_U
_welcome_msg:
;LCD_HD44780.c,157 :: 		void welcome_msg(){
;LCD_HD44780.c,160 :: 		ClearLCDScreen();               // Clear display  +++++++++++++++++|||||
0x00C4	0x208B      	CALL       _ClearLCDScreen
;LCD_HD44780.c,161 :: 		WriteLCDLine1("* Hello  World *");
0x00C5	0x3096      	MOVLW      ?lstr_1_LCD_HD44780
0x00C6	0x00A4      	MOVWF      FARG_WriteLCDLine1_s
0x00C7	0x3001      	MOVLW      hi_addr(?lstr_1_LCD_HD44780)
0x00C8	0x00A5      	MOVWF      FARG_WriteLCDLine1_s+1
0x00C9	0x2080      	CALL       _WriteLCDLine1
;LCD_HD44780.c,162 :: 		WriteLCDLine2("**  MELAB-BD  **");
0x00CA	0x3085      	MOVLW      ?lstr_2_LCD_HD44780
0x00CB	0x00A4      	MOVWF      FARG_WriteLCDLine2_s
0x00CC	0x3001      	MOVLW      hi_addr(?lstr_2_LCD_HD44780)
0x00CD	0x00A5      	MOVWF      FARG_WriteLCDLine2_s+1
0x00CE	0x209B      	CALL       _WriteLCDLine2
;LCD_HD44780.c,165 :: 		Delay_ms(1000);
0x00CF	0x3006      	MOVLW      6
0x00D0	0x00FB      	MOVWF      R11
0x00D1	0x3013      	MOVLW      19
0x00D2	0x00FC      	MOVWF      R12
0x00D3	0x30AD      	MOVLW      173
0x00D4	0x00FD      	MOVWF      R13
L_welcome_msg10:
0x00D5	0x0BFD      	DECFSZ     R13, 1
0x00D6	0x28D5      	GOTO       L_welcome_msg10
0x00D7	0x0BFC      	DECFSZ     R12, 1
0x00D8	0x28D5      	GOTO       L_welcome_msg10
0x00D9	0x0BFB      	DECFSZ     R11, 1
0x00DA	0x28D5      	GOTO       L_welcome_msg10
0x00DB	0x0000      	NOP
0x00DC	0x0000      	NOP
;LCD_HD44780.c,168 :: 		}
L_end_welcome_msg:
0x00DD	0x0008      	RETURN
; end of _welcome_msg
_InitLCD:
;LCD_HD44780.c,57 :: 		void InitLCD(void){
;LCD_HD44780.c,59 :: 		LCD_EN            = 0;   // E  = 0
0x00DE	0x1283      	BCF        STATUS, 5
0x00DF	0x1303      	BCF        STATUS, 6
0x00E0	0x1088      	BCF        PORTD, 1
;LCD_HD44780.c,60 :: 		LCD_RS            = 0;   // RS = 0
0x00E1	0x1008      	BCF        PORTD, 0
;LCD_HD44780.c,62 :: 		Delay_ms(40);
0x00E2	0x3034      	MOVLW      52
0x00E3	0x00FC      	MOVWF      R12
0x00E4	0x30F1      	MOVLW      241
0x00E5	0x00FD      	MOVWF      R13
L_InitLCD2:
0x00E6	0x0BFD      	DECFSZ     R13, 1
0x00E7	0x28E6      	GOTO       L_InitLCD2
0x00E8	0x0BFC      	DECFSZ     R12, 1
0x00E9	0x28E6      	GOTO       L_InitLCD2
0x00EA	0x0000      	NOP
0x00EB	0x0000      	NOP
;LCD_HD44780.c,64 :: 		LCD_PORT &= 0x0F;                  // Make Data pins zero
0x00EC	0x300F      	MOVLW      15
0x00ED	0x0588      	ANDWF      PORTD, 1
;LCD_HD44780.c,65 :: 		LCD_PORT |= 0x30;                  // Write 0x3 value on data bus
0x00EE	0x3030      	MOVLW      48
0x00EF	0x0488      	IORWF      PORTD, 1
;LCD_HD44780.c,66 :: 		ToggleEpinOfLCD();                  // Give pulse on E pin
0x00F0	0x2003      	CALL       _ToggleEpinOfLCD
;LCD_HD44780.c,68 :: 		Delay_ms(6);
0x00F1	0x3008      	MOVLW      8
0x00F2	0x00FC      	MOVWF      R12
0x00F3	0x30C9      	MOVLW      201
0x00F4	0x00FD      	MOVWF      R13
L_InitLCD3:
0x00F5	0x0BFD      	DECFSZ     R13, 1
0x00F6	0x28F5      	GOTO       L_InitLCD3
0x00F7	0x0BFC      	DECFSZ     R12, 1
0x00F8	0x28F5      	GOTO       L_InitLCD3
0x00F9	0x0000      	NOP
0x00FA	0x0000      	NOP
;LCD_HD44780.c,70 :: 		LCD_PORT &= 0x0F;                  // Make Data pins zero
0x00FB	0x300F      	MOVLW      15
0x00FC	0x0588      	ANDWF      PORTD, 1
;LCD_HD44780.c,71 :: 		LCD_PORT |= 0x30;                  // Write 0x3 value on data bus
0x00FD	0x3030      	MOVLW      48
0x00FE	0x0488      	IORWF      PORTD, 1
;LCD_HD44780.c,72 :: 		ToggleEpinOfLCD();                  // Give pulse on E pin
0x00FF	0x2003      	CALL       _ToggleEpinOfLCD
;LCD_HD44780.c,74 :: 		Delay_us(300);
0x0100	0x3063      	MOVLW      99
0x0101	0x00FD      	MOVWF      R13
L_InitLCD4:
0x0102	0x0BFD      	DECFSZ     R13, 1
0x0103	0x2902      	GOTO       L_InitLCD4
0x0104	0x0000      	NOP
0x0105	0x0000      	NOP
;LCD_HD44780.c,76 :: 		LCD_PORT &= 0x0F;                  // Make Data pins zero
0x0106	0x300F      	MOVLW      15
0x0107	0x0588      	ANDWF      PORTD, 1
;LCD_HD44780.c,77 :: 		LCD_PORT |= 0x30;                  // Write 0x3 value on data bus
0x0108	0x3030      	MOVLW      48
0x0109	0x0488      	IORWF      PORTD, 1
;LCD_HD44780.c,78 :: 		ToggleEpinOfLCD();                  // Give pulse on E pin
0x010A	0x2003      	CALL       _ToggleEpinOfLCD
;LCD_HD44780.c,80 :: 		Delay_ms(2);
0x010B	0x3003      	MOVLW      3
0x010C	0x00FC      	MOVWF      R12
0x010D	0x3097      	MOVLW      151
0x010E	0x00FD      	MOVWF      R13
L_InitLCD5:
0x010F	0x0BFD      	DECFSZ     R13, 1
0x0110	0x290F      	GOTO       L_InitLCD5
0x0111	0x0BFC      	DECFSZ     R12, 1
0x0112	0x290F      	GOTO       L_InitLCD5
0x0113	0x0000      	NOP
0x0114	0x0000      	NOP
;LCD_HD44780.c,82 :: 		LCD_PORT &= 0x0F;                  // Make Data pins zero
0x0115	0x300F      	MOVLW      15
0x0116	0x0588      	ANDWF      PORTD, 1
;LCD_HD44780.c,83 :: 		LCD_PORT |= 0x20;                  // Write 0x2 value on data bus
0x0117	0x1688      	BSF        PORTD, 5
;LCD_HD44780.c,84 :: 		ToggleEpinOfLCD();                  // Give pulse on E pin
0x0118	0x2003      	CALL       _ToggleEpinOfLCD
;LCD_HD44780.c,86 :: 		Delay_ms(2);
0x0119	0x3003      	MOVLW      3
0x011A	0x00FC      	MOVWF      R12
0x011B	0x3097      	MOVLW      151
0x011C	0x00FD      	MOVWF      R13
L_InitLCD6:
0x011D	0x0BFD      	DECFSZ     R13, 1
0x011E	0x291D      	GOTO       L_InitLCD6
0x011F	0x0BFC      	DECFSZ     R12, 1
0x0120	0x291D      	GOTO       L_InitLCD6
0x0121	0x0000      	NOP
0x0122	0x0000      	NOP
;LCD_HD44780.c,88 :: 		WriteCommandToLCD(0x28);    //function set
0x0123	0x3028      	MOVLW      40
0x0124	0x00A8      	MOVWF      FARG_WriteCommandToLCD_Command
0x0125	0x2010      	CALL       _WriteCommandToLCD
;LCD_HD44780.c,89 :: 		WriteCommandToLCD(0x0c);    //display on,cursor off,blink off
0x0126	0x300C      	MOVLW      12
0x0127	0x00A8      	MOVWF      FARG_WriteCommandToLCD_Command
0x0128	0x2010      	CALL       _WriteCommandToLCD
;LCD_HD44780.c,90 :: 		WriteCommandToLCD(0x01);    //clear display
0x0129	0x3001      	MOVLW      1
0x012A	0x00A8      	MOVWF      FARG_WriteCommandToLCD_Command
0x012B	0x2010      	CALL       _WriteCommandToLCD
;LCD_HD44780.c,91 :: 		WriteCommandToLCD(0x06);    //entry mode, set increment
0x012C	0x3006      	MOVLW      6
0x012D	0x00A8      	MOVWF      FARG_WriteCommandToLCD_Command
0x012E	0x2010      	CALL       _WriteCommandToLCD
;LCD_HD44780.c,92 :: 		}
L_end_InitLCD:
0x012F	0x0008      	RETURN
; end of _InitLCD
_init_main:
;P877_LCD_meab.c,28 :: 		void  init_main(){
;P877_LCD_meab.c,30 :: 		TRISB       = 0x00;
0x0130	0x1683      	BSF        STATUS, 5
0x0131	0x1303      	BCF        STATUS, 6
0x0132	0x0186      	CLRF       TRISB
;P877_LCD_meab.c,31 :: 		TRISC       = 0x00;
0x0133	0x0187      	CLRF       TRISC
;P877_LCD_meab.c,32 :: 		TRISE       = 0x00;
0x0134	0x0189      	CLRF       TRISE
;P877_LCD_meab.c,33 :: 		TRISA       = 0x01;
0x0135	0x3001      	MOVLW      1
0x0136	0x0085      	MOVWF      TRISA
;P877_LCD_meab.c,34 :: 		TRISD       = 0x00;
0x0137	0x0188      	CLRF       TRISD
;P877_LCD_meab.c,35 :: 		PORTA       = 0;  //
0x0138	0x1283      	BCF        STATUS, 5
0x0139	0x0185      	CLRF       PORTA
;P877_LCD_meab.c,36 :: 		PORTB       = 0;
0x013A	0x0186      	CLRF       PORTB
;P877_LCD_meab.c,37 :: 		PORTC       = 0;
0x013B	0x0187      	CLRF       PORTC
;P877_LCD_meab.c,39 :: 		}
L_end_init_main:
0x013C	0x0008      	RETURN
; end of _init_main
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x013D	0x204A      	CALL       _____DoICP
0x013E	0x118A      	BCF        PCLATH, 3
0x013F	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x0140	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x0141	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x0142	0x0AA2      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0143	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0144	0x0AA3      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0145	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0146	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0147	0x293D      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0148	0x0008      	RETURN
; end of ___CC2DW
_main:
0x0149	0x3020      	MOVLW      32
0x014A	0x1283      	BCF        STATUS, 5
0x014B	0x1303      	BCF        STATUS, 6
0x014C	0x00A0      	MOVWF      _temp_c
0x014D	0x01A1      	CLRF       33
;P877_LCD_meab.c,47 :: 		void main() {
;P877_LCD_meab.c,48 :: 		init_main();
0x014E	0x2130      	CALL       _init_main
;P877_LCD_meab.c,49 :: 		InitLCD();
0x014F	0x20DE      	CALL       _InitLCD
;P877_LCD_meab.c,50 :: 		welcome_msg();
0x0150	0x20C4      	CALL       _welcome_msg
;P877_LCD_meab.c,51 :: 		ClearLCDScreen();               // Clear display  +++++++++++++++++|||||
0x0151	0x208B      	CALL       _ClearLCDScreen
;P877_LCD_meab.c,53 :: 		WriteLCDLine1("Temp. C =");
0x0152	0x30A7      	MOVLW      ?lstr_1_P877_LCD_meab
0x0153	0x00A4      	MOVWF      FARG_WriteLCDLine1_s
0x0154	0x3001      	MOVLW      hi_addr(?lstr_1_P877_LCD_meab)
0x0155	0x00A5      	MOVWF      FARG_WriteLCDLine1_s+1
0x0156	0x2080      	CALL       _WriteLCDLine1
;P877_LCD_meab.c,54 :: 		GotoYXPositionOnLCD(1, 10);
0x0157	0x3001      	MOVLW      1
0x0158	0x00A6      	MOVWF      FARG_GotoYXPositionOnLCD_LineNumber
0x0159	0x300A      	MOVLW      10
0x015A	0x00A7      	MOVWF      FARG_GotoYXPositionOnLCD_OFFSET
0x015B	0x206C      	CALL       _GotoYXPositionOnLCD
;P877_LCD_meab.c,55 :: 		WriteDataToLCD((temp_c/10)%10 + 48);
0x015C	0x300A      	MOVLW      10
0x015D	0x00F4      	MOVWF      R4
0x015E	0x3000      	MOVLW      0
0x015F	0x00F5      	MOVWF      R4+1
0x0160	0x0820      	MOVF       _temp_c, 0
0x0161	0x00F0      	MOVWF      R0
0x0162	0x0821      	MOVF       _temp_c+1, 0
0x0163	0x00F1      	MOVWF      R0+1
0x0164	0x20A7      	CALL       _Div_16x16_U
0x0165	0x300A      	MOVLW      10
0x0166	0x00F4      	MOVWF      R4
0x0167	0x3000      	MOVLW      0
0x0168	0x00F5      	MOVWF      R4+1
0x0169	0x20A7      	CALL       _Div_16x16_U
0x016A	0x0878      	MOVF       R8, 0
0x016B	0x00F0      	MOVWF      R0
0x016C	0x0879      	MOVF       R8+1, 0
0x016D	0x00F1      	MOVWF      R0+1
0x016E	0x3030      	MOVLW      48
0x016F	0x0770      	ADDWF      R0, 0
0x0170	0x00A8      	MOVWF      FARG_WriteDataToLCD_LCDChar
0x0171	0x202D      	CALL       _WriteDataToLCD
;P877_LCD_meab.c,56 :: 		WriteDataToLCD(temp_c%10 + 48);
0x0172	0x300A      	MOVLW      10
0x0173	0x00F4      	MOVWF      R4
0x0174	0x3000      	MOVLW      0
0x0175	0x00F5      	MOVWF      R4+1
0x0176	0x0820      	MOVF       _temp_c, 0
0x0177	0x00F0      	MOVWF      R0
0x0178	0x0821      	MOVF       _temp_c+1, 0
0x0179	0x00F1      	MOVWF      R0+1
0x017A	0x20A7      	CALL       _Div_16x16_U
0x017B	0x0878      	MOVF       R8, 0
0x017C	0x00F0      	MOVWF      R0
0x017D	0x0879      	MOVF       R8+1, 0
0x017E	0x00F1      	MOVWF      R0+1
0x017F	0x3030      	MOVLW      48
0x0180	0x0770      	ADDWF      R0, 0
0x0181	0x00A8      	MOVWF      FARG_WriteDataToLCD_LCDChar
0x0182	0x202D      	CALL       _WriteDataToLCD
;P877_LCD_meab.c,59 :: 		while(1);
L_main0:
0x0183	0x2983      	GOTO       L_main0
;P877_LCD_meab.c,61 :: 		}
L_end_main:
0x0184	0x2984      	GOTO       $+0
; end of _main
;LCD_HD44780.c,0 :: ?lstr_2_LCD_HD44780
0x0185	0x342A ;?lstr_2_LCD_HD44780+0
0x0186	0x342A ;?lstr_2_LCD_HD44780+1
0x0187	0x3420 ;?lstr_2_LCD_HD44780+2
0x0188	0x3420 ;?lstr_2_LCD_HD44780+3
0x0189	0x344D ;?lstr_2_LCD_HD44780+4
0x018A	0x3445 ;?lstr_2_LCD_HD44780+5
0x018B	0x344C ;?lstr_2_LCD_HD44780+6
0x018C	0x3441 ;?lstr_2_LCD_HD44780+7
0x018D	0x3442 ;?lstr_2_LCD_HD44780+8
0x018E	0x342D ;?lstr_2_LCD_HD44780+9
0x018F	0x3442 ;?lstr_2_LCD_HD44780+10
0x0190	0x3444 ;?lstr_2_LCD_HD44780+11
0x0191	0x3420 ;?lstr_2_LCD_HD44780+12
0x0192	0x3420 ;?lstr_2_LCD_HD44780+13
0x0193	0x342A ;?lstr_2_LCD_HD44780+14
0x0194	0x342A ;?lstr_2_LCD_HD44780+15
0x0195	0x3400 ;?lstr_2_LCD_HD44780+16
; end of ?lstr_2_LCD_HD44780
;LCD_HD44780.c,0 :: ?lstr_1_LCD_HD44780
0x0196	0x342A ;?lstr_1_LCD_HD44780+0
0x0197	0x3420 ;?lstr_1_LCD_HD44780+1
0x0198	0x3448 ;?lstr_1_LCD_HD44780+2
0x0199	0x3465 ;?lstr_1_LCD_HD44780+3
0x019A	0x346C ;?lstr_1_LCD_HD44780+4
0x019B	0x346C ;?lstr_1_LCD_HD44780+5
0x019C	0x346F ;?lstr_1_LCD_HD44780+6
0x019D	0x3420 ;?lstr_1_LCD_HD44780+7
0x019E	0x3420 ;?lstr_1_LCD_HD44780+8
0x019F	0x3457 ;?lstr_1_LCD_HD44780+9
0x01A0	0x346F ;?lstr_1_LCD_HD44780+10
0x01A1	0x3472 ;?lstr_1_LCD_HD44780+11
0x01A2	0x346C ;?lstr_1_LCD_HD44780+12
0x01A3	0x3464 ;?lstr_1_LCD_HD44780+13
0x01A4	0x3420 ;?lstr_1_LCD_HD44780+14
0x01A5	0x342A ;?lstr_1_LCD_HD44780+15
0x01A6	0x3400 ;?lstr_1_LCD_HD44780+16
; end of ?lstr_1_LCD_HD44780
;P877_LCD_meab.c,0 :: ?lstr_1_P877_LCD_meab
0x01A7	0x3454 ;?lstr_1_P877_LCD_meab+0
0x01A8	0x3465 ;?lstr_1_P877_LCD_meab+1
0x01A9	0x346D ;?lstr_1_P877_LCD_meab+2
0x01AA	0x3470 ;?lstr_1_P877_LCD_meab+3
0x01AB	0x342E ;?lstr_1_P877_LCD_meab+4
0x01AC	0x3420 ;?lstr_1_P877_LCD_meab+5
0x01AD	0x3443 ;?lstr_1_P877_LCD_meab+6
0x01AE	0x3420 ;?lstr_1_P877_LCD_meab+7
0x01AF	0x343D ;?lstr_1_P877_LCD_meab+8
0x01B0	0x3400 ;?lstr_1_P877_LCD_meab+9
; end of ?lstr_1_P877_LCD_meab
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003      [13]    _ToggleEpinOfLCD
0x0010      [29]    _WriteCommandToLCD
0x002D      [29]    _WriteDataToLCD
0x004A       [7]    _____DoICP
0x0051      [27]    _WriteStringToLCD
0x006C      [20]    _GotoYXPositionOnLCD
0x0080      [11]    _WriteLCDLine1
0x008B      [16]    _ClearLCDScreen
0x009B      [12]    _WriteLCDLine2
0x00A7      [29]    _Div_16x16_U
0x00C4      [26]    _welcome_msg
0x00DE      [82]    _InitLCD
0x0130      [13]    _init_main
0x013D      [12]    ___CC2DW
0x0149      [60]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [1]    PORTA
0x0006       [1]    PORTB
0x0007       [1]    PORTC
0x0008       [1]    PORTD
0x000A       [1]    PCLATH
0x0020       [2]    _temp_c
0x0022       [2]    ___DoICPAddr
0x0024       [2]    FARG_WriteLCDLine1_s
0x0024       [2]    FARG_WriteLCDLine2_s
0x0026       [1]    FARG_GotoYXPositionOnLCD_LineNumber
0x0026       [2]    FARG_WriteStringToLCD_s
0x0027       [1]    FARG_GotoYXPositionOnLCD_OFFSET
0x0028       [1]    FARG_WriteCommandToLCD_Command
0x0028       [1]    FARG_WriteDataToLCD_LCDChar
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0085       [1]    TRISA
0x0086       [1]    TRISB
0x0087       [1]    TRISC
0x0088       [1]    TRISD
0x0089       [1]    TRISE
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0185      [17]    ?lstr_2_LCD_HD44780
0x0196      [17]    ?lstr_1_LCD_HD44780
0x01A7      [10]    ?lstr_1_P877_LCD_meab
//** Label List: ** 
//----------------------------------------------
  L_ToggleEpinOfLCD0
  L_ToggleEpinOfLCD1
  L_InitLCD2
  L_InitLCD3
  L_InitLCD4
  L_InitLCD5
  L_InitLCD6
  L_WriteStringToLCD7
  L_WriteStringToLCD8
  L_ClearLCDScreen9
  L_welcome_msg10
  L_end_ToggleEpinOfLCD
  _ToggleEpinOfLCD
  L_end_WriteCommandToLCD
  _WriteCommandToLCD
  L_end_WriteDataToLCD
  _WriteDataToLCD
  L_end_InitLCD
  _InitLCD
  L_end_WriteStringToLCD
  _WriteStringToLCD
  L_end_ClearLCDScreen
  _ClearLCDScreen
  L_end_GotoYXPositionOnLCD
  _GotoYXPositionOnLCD
  L__GotoYXPositionOnLCD18
  L__GotoYXPositionOnLCD19
  L_end_WriteLCDLine1
  _WriteLCDLine1
  L_end_WriteLCDLine2
  _WriteLCDLine2
  L_end_WriteLCDLine3
  _WriteLCDLine3
  L_end_WriteLCDLine4
  _WriteLCDLine4
  L_end_welcome_msg
  _welcome_msg
  L_main0
  L_main1
  L_end_init_main
  _init_main
  L_end_main
  _main
  L_Div_16x16_S0
  L_Div_16x16_S1
  LOOPS3232A
  SADD22LA
  SOK22LA
  SADD22L8
  SOK22L8
  LOOPS3232B
  SADD22LB
  SOK22LB
  SADD22L16
  SOK22L16
  LOOPS3232C
  SADD22LC
  SOK22LC
  SADD22L24
  SOK22L24
  LOOPS3232D
  SADD22LD
  SOK22LD
  SOK22L
  L_Div_32x32_S6
  L_Div_32x32_S7
  L_Div_32x32_S8
  L_Div_32x32_S9
  FXD3232S
  END_ALL
  CA3232S
  C3232SX
  C3232SX1
  C3232S
  C3232S2
  C3232SX4
  C3232SOK
  C3232SX3
  C3232SX2
  avoid_comfrem
  LOOPU3232A
  UADD22LA
  UOK22LA
  UADD22L8
  UOK22L8
  LOOPU3232B
  UADD22LB
  UOK22LB
  UADD22L16
  UOK22L16
  LOOPU3232C
  UADD22LC
  UOK22LC
  UADD22L24
  UOK22L24
  LOOPU3232D
  UADD22LD
  UOK22LD
  UOK22L
  _NEXT
  _EXIT2
  _LOOP
  _EXIT1
  _IF_FIRST
  _IF_SECOND
  _INVERCE_FIRST
  _MULT
  _INBERSE_SECOND
  _EXIT
  L_end_Mul_8x8_U
  _Mul_8x8_U
  L_end_Mul_16x16_U
  _Mul_16x16_U
  L_end_Div_8x8_U
  _Div_8x8_U
  L_end_Div_16x16_U
  _Div_16x16_U
  L_end_Mul_8x8_S
  _Mul_8x8_S
  L_end_Mul_16x16_S
  _Mul_16x16_S
  L_end_Div_16x16_S_L
  _Div_16x16_S_L
  L_end_Div_16x16_S
  _Div_16x16_S
  L_end_Div_8x8_S
  _Div_8x8_S
  L_end_SDIV3232L
  _SDIV3232L
  L_end_COMFREM
  _COMFREM
  L_end_Div_32x32_S
  _Div_32x32_S
  L_end_Div_32x32_U
  _Div_32x32_U
  L_end_Mul_32x32_U
  _Mul_32x32_U
  L_end_Mul_32x32_S
  _Mul_32x32_S
  L_loopCA2AWs
  L_CA2AWend
  _CCA2AW_Loop1
  L_loopCS2Ss
  L_CS2Send
  _CCS2S_Loop1
  L_CCS2Send
  L_loopFZinSWs
  L_FZinSend
  _CC2D_Loop1
  L_end_____DoICP
  _____DoICP
  L_end_____DoIFC
  _____DoIFC
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end___CC2DW
  ___CC2DW
  L_end_Swap
  _Swap
