;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 03/02/2019 16:32:34
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x291F      	GOTO       287
_ToggleEpinOfLCD:
;Lcd_4_bit.c,113 :: 		void ToggleEpinOfLCD(void)
;Lcd_4_bit.c,115 :: 		LCD_EN = 1;                // Give a pulse on E pin
0x0003	0x1283      	BCF        STATUS, 5
0x0004	0x1303      	BCF        STATUS, 6
0x0005	0x1487      	BSF        RC1_bit, BitPos(RC1_bit+0)
;Lcd_4_bit.c,116 :: 		Delay_us(E_Delay);      // so that LCD can latch the
0x0006	0x3021      	MOVLW      33
0x0007	0x00FD      	MOVWF      R13
L_ToggleEpinOfLCD8:
0x0008	0x0BFD      	DECFSZ     R13, 1
0x0009	0x2808      	GOTO       L_ToggleEpinOfLCD8
;Lcd_4_bit.c,117 :: 		LCD_EN = 0;                // data from data bus
0x000A	0x1087      	BCF        RC1_bit, BitPos(RC1_bit+0)
;Lcd_4_bit.c,118 :: 		Delay_us(E_Delay);
0x000B	0x3021      	MOVLW      33
0x000C	0x00FD      	MOVWF      R13
L_ToggleEpinOfLCD9:
0x000D	0x0BFD      	DECFSZ     R13, 1
0x000E	0x280D      	GOTO       L_ToggleEpinOfLCD9
;Lcd_4_bit.c,119 :: 		}
L_end_ToggleEpinOfLCD:
0x000F	0x0008      	RETURN
; end of _ToggleEpinOfLCD
_WriteDataToLCD:
;Lcd_4_bit.c,139 :: 		void WriteDataToLCD(char LCDChar)
;Lcd_4_bit.c,141 :: 		LCD_RS = 1;                           // It is data
0x0010	0x1283      	BCF        STATUS, 5
0x0011	0x1303      	BCF        STATUS, 6
0x0012	0x1407      	BSF        RC0_bit, BitPos(RC0_bit+0)
;Lcd_4_bit.c,142 :: 		LCD_PORT &= 0x0F;                     // Make Data pins zero
0x0013	0x300F      	MOVLW      15
0x0014	0x0586      	ANDWF      PORTB, 1
;Lcd_4_bit.c,143 :: 		LCD_PORT |= (LCDChar&0xF0);           // Write Upper nibble of data
0x0015	0x30F0      	MOVLW      240
0x0016	0x0526      	ANDWF      FARG_WriteDataToLCD_LCDChar, 0
0x0017	0x00F0      	MOVWF      R0
0x0018	0x0870      	MOVF       R0, 0
0x0019	0x0486      	IORWF      PORTB, 1
;Lcd_4_bit.c,144 :: 		ToggleEpinOfLCD();                    // Give pulse on E pin
0x001A	0x2003      	CALL       _ToggleEpinOfLCD
;Lcd_4_bit.c,145 :: 		LCD_PORT &= 0x0F;                     // Make Data pins zero
0x001B	0x300F      	MOVLW      15
0x001C	0x0586      	ANDWF      PORTB, 1
;Lcd_4_bit.c,146 :: 		LCD_PORT |= ((LCDChar<<4)&0xF0);      // Write Lower nibble of data
0x001D	0x0826      	MOVF       FARG_WriteDataToLCD_LCDChar, 0
0x001E	0x00F0      	MOVWF      R0
0x001F	0x0DF0      	RLF        R0, 1
0x0020	0x1070      	BCF        R0, 0
0x0021	0x0DF0      	RLF        R0, 1
0x0022	0x1070      	BCF        R0, 0
0x0023	0x0DF0      	RLF        R0, 1
0x0024	0x1070      	BCF        R0, 0
0x0025	0x0DF0      	RLF        R0, 1
0x0026	0x1070      	BCF        R0, 0
0x0027	0x30F0      	MOVLW      240
0x0028	0x05F0      	ANDWF      R0, 1
0x0029	0x0870      	MOVF       R0, 0
0x002A	0x0486      	IORWF      PORTB, 1
;Lcd_4_bit.c,147 :: 		ToggleEpinOfLCD();                    // Give pulse on E pin
0x002B	0x2003      	CALL       _ToggleEpinOfLCD
;Lcd_4_bit.c,148 :: 		}
L_end_WriteDataToLCD:
0x002C	0x0008      	RETURN
; end of _WriteDataToLCD
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x002D	0x1283      	BCF        STATUS, 5
0x002E	0x1303      	BCF        STATUS, 6
0x002F	0x0821      	MOVF       ___DoICPAddr+1, 0
0x0030	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0031	0x0820      	MOVF       ___DoICPAddr, 0
0x0032	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0033	0x0008      	RETURN
; end of _____DoICP
_WriteCommandToLCD:
;Lcd_4_bit.c,124 :: 		void WriteCommandToLCD(unsigned char Command)
;Lcd_4_bit.c,126 :: 		LCD_RS = 0;                                              // It is a command
0x0034	0x1283      	BCF        STATUS, 5
0x0035	0x1303      	BCF        STATUS, 6
0x0036	0x1007      	BCF        RC0_bit, BitPos(RC0_bit+0)
;Lcd_4_bit.c,127 :: 		LCD_PORT &= 0x0F;                                   // Make Data pins zero
0x0037	0x300F      	MOVLW      15
0x0038	0x0586      	ANDWF      PORTB, 1
;Lcd_4_bit.c,128 :: 		LCD_PORT |= (Command&0xF0);                 // Write Upper nibble of data
0x0039	0x30F0      	MOVLW      240
0x003A	0x0526      	ANDWF      FARG_WriteCommandToLCD_Command, 0
0x003B	0x00F0      	MOVWF      R0
0x003C	0x0870      	MOVF       R0, 0
0x003D	0x0486      	IORWF      PORTB, 1
;Lcd_4_bit.c,129 :: 		ToggleEpinOfLCD();                                    // Give pulse on E pin
0x003E	0x2003      	CALL       _ToggleEpinOfLCD
;Lcd_4_bit.c,131 :: 		LCD_PORT &= 0x0F;                                    // Make Data pins zero
0x003F	0x300F      	MOVLW      15
0x0040	0x0586      	ANDWF      PORTB, 1
;Lcd_4_bit.c,132 :: 		LCD_PORT |= ((Command<<4)&0xF0); // Write Lower nibble of data
0x0041	0x0826      	MOVF       FARG_WriteCommandToLCD_Command, 0
0x0042	0x00F0      	MOVWF      R0
0x0043	0x0DF0      	RLF        R0, 1
0x0044	0x1070      	BCF        R0, 0
0x0045	0x0DF0      	RLF        R0, 1
0x0046	0x1070      	BCF        R0, 0
0x0047	0x0DF0      	RLF        R0, 1
0x0048	0x1070      	BCF        R0, 0
0x0049	0x0DF0      	RLF        R0, 1
0x004A	0x1070      	BCF        R0, 0
0x004B	0x30F0      	MOVLW      240
0x004C	0x05F0      	ANDWF      R0, 1
0x004D	0x0870      	MOVF       R0, 0
0x004E	0x0486      	IORWF      PORTB, 1
;Lcd_4_bit.c,133 :: 		ToggleEpinOfLCD();                                    // Give pulse on E pin
0x004F	0x2003      	CALL       _ToggleEpinOfLCD
;Lcd_4_bit.c,134 :: 		}
L_end_WriteCommandToLCD:
0x0050	0x0008      	RETURN
; end of _WriteCommandToLCD
_WriteStringToLCD:
;Lcd_4_bit.c,152 :: 		void WriteStringToLCD(const char *s)
;Lcd_4_bit.c,154 :: 		while(*s) WriteDataToLCD(*s++);   // print first character on LCD
L_WriteStringToLCD10:
0x0051	0x1283      	BCF        STATUS, 5
0x0052	0x1303      	BCF        STATUS, 6
0x0053	0x0824      	MOVF       FARG_WriteStringToLCD_s, 0
0x0054	0x00A0      	MOVWF      ___DoICPAddr
0x0055	0x0825      	MOVF       FARG_WriteStringToLCD_s+1, 0
0x0056	0x00A1      	MOVWF      ___DoICPAddr+1
0x0057	0x202D      	CALL       _____DoICP
0x0058	0x118A      	BCF        PCLATH, 3
0x0059	0x120A      	BCF        PCLATH, 4
0x005A	0x00F0      	MOVWF      R0
0x005B	0x0870      	MOVF       R0, 0
0x005C	0x1903      	BTFSC      STATUS, 2
0x005D	0x286B      	GOTO       L_WriteStringToLCD11
0x005E	0x0824      	MOVF       FARG_WriteStringToLCD_s, 0
0x005F	0x00A0      	MOVWF      ___DoICPAddr
0x0060	0x0825      	MOVF       FARG_WriteStringToLCD_s+1, 0
0x0061	0x00A1      	MOVWF      ___DoICPAddr+1
0x0062	0x202D      	CALL       _____DoICP
0x0063	0x118A      	BCF        PCLATH, 3
0x0064	0x120A      	BCF        PCLATH, 4
0x0065	0x00A6      	MOVWF      FARG_WriteDataToLCD_LCDChar
0x0066	0x2010      	CALL       _WriteDataToLCD
0x0067	0x0AA4      	INCF       FARG_WriteStringToLCD_s, 1
0x0068	0x1903      	BTFSC      STATUS, 2
0x0069	0x0AA5      	INCF       FARG_WriteStringToLCD_s+1, 1
0x006A	0x2851      	GOTO       L_WriteStringToLCD10
L_WriteStringToLCD11:
;Lcd_4_bit.c,155 :: 		}
L_end_WriteStringToLCD:
0x006B	0x0008      	RETURN
; end of _WriteStringToLCD
_GotoYXPositionOnLCD:
;Lcd_4_bit.c,169 :: 		void GotoYXPositionOnLCD(unsigned char LineNumber, unsigned char OFFSET)   // LineNumber can have two values, LCD_LINE1 and LCD_LINE2
;Lcd_4_bit.c,171 :: 		WriteCommandToLCD(0x80|((LineNumber*0x40)+OFFSET));                    // Line1 is from 0x0 to 0x27 and Line2 is from 0x40 to 0x67
0x006C	0x3006      	MOVLW      6
0x006D	0x1283      	BCF        STATUS, 5
0x006E	0x1303      	BCF        STATUS, 6
0x006F	0x00F1      	MOVWF      R1
0x0070	0x0824      	MOVF       FARG_GotoYXPositionOnLCD_LineNumber, 0
0x0071	0x00F0      	MOVWF      R0
0x0072	0x0871      	MOVF       R1, 0
L__GotoYXPositionOnLCD23:
0x0073	0x1903      	BTFSC      STATUS, 2
0x0074	0x2879      	GOTO       L__GotoYXPositionOnLCD24
0x0075	0x0DF0      	RLF        R0, 1
0x0076	0x1070      	BCF        R0, 0
0x0077	0x3EFF      	ADDLW      255
0x0078	0x2873      	GOTO       L__GotoYXPositionOnLCD23
L__GotoYXPositionOnLCD24:
0x0079	0x0825      	MOVF       FARG_GotoYXPositionOnLCD_OFFSET, 0
0x007A	0x07F0      	ADDWF      R0, 1
0x007B	0x3080      	MOVLW      128
0x007C	0x0470      	IORWF      R0, 0
0x007D	0x00A6      	MOVWF      FARG_WriteCommandToLCD_Command
0x007E	0x2034      	CALL       _WriteCommandToLCD
;Lcd_4_bit.c,172 :: 		}
L_end_GotoYXPositionOnLCD:
0x007F	0x0008      	RETURN
; end of _GotoYXPositionOnLCD
_WriteLCDLine1:
;Lcd_4_bit.c,177 :: 		void WriteLCDLine1(const char *s)    // length of s should be 16 for 16x2 LCD and 20 for 20x2 LCD
;Lcd_4_bit.c,179 :: 		GotoYXPositionOnLCD(LCD_LINE1, 0);     // Goto 0,0 location
0x0080	0x1283      	BCF        STATUS, 5
0x0081	0x1303      	BCF        STATUS, 6
0x0082	0x01A4      	CLRF       FARG_GotoYXPositionOnLCD_LineNumber
0x0083	0x01A5      	CLRF       FARG_GotoYXPositionOnLCD_OFFSET
0x0084	0x206C      	CALL       _GotoYXPositionOnLCD
;Lcd_4_bit.c,180 :: 		WriteStringToLCD(s);
0x0085	0x0822      	MOVF       FARG_WriteLCDLine1_s, 0
0x0086	0x00A4      	MOVWF      FARG_WriteStringToLCD_s
0x0087	0x0823      	MOVF       FARG_WriteLCDLine1_s+1, 0
0x0088	0x00A5      	MOVWF      FARG_WriteStringToLCD_s+1
0x0089	0x2051      	CALL       _WriteStringToLCD
;Lcd_4_bit.c,181 :: 		}
L_end_WriteLCDLine1:
0x008A	0x0008      	RETURN
; end of _WriteLCDLine1
_ClearLCDScreen:
;Lcd_4_bit.c,160 :: 		void ClearLCDScreen(void)       // Clear the Screen and return cursor to zero position
;Lcd_4_bit.c,162 :: 		WriteCommandToLCD(0x01);    // Clear the screen
0x008B	0x3001      	MOVLW      1
0x008C	0x1283      	BCF        STATUS, 5
0x008D	0x1303      	BCF        STATUS, 6
0x008E	0x00A6      	MOVWF      FARG_WriteCommandToLCD_Command
0x008F	0x2034      	CALL       _WriteCommandToLCD
;Lcd_4_bit.c,163 :: 		Delay_ms(2);              // Delay for cursor to return at zero position
0x0090	0x3003      	MOVLW      3
0x0091	0x00FC      	MOVWF      R12
0x0092	0x3097      	MOVLW      151
0x0093	0x00FD      	MOVWF      R13
L_ClearLCDScreen12:
0x0094	0x0BFD      	DECFSZ     R13, 1
0x0095	0x2894      	GOTO       L_ClearLCDScreen12
0x0096	0x0BFC      	DECFSZ     R12, 1
0x0097	0x2894      	GOTO       L_ClearLCDScreen12
0x0098	0x0000      	NOP
0x0099	0x0000      	NOP
;Lcd_4_bit.c,164 :: 		}
L_end_ClearLCDScreen:
0x009A	0x0008      	RETURN
; end of _ClearLCDScreen
_WriteLCDLine2:
;Lcd_4_bit.c,186 :: 		void WriteLCDLine2(const char *s)    // length of s should be 16 for 16x2 LCD and 20 for 20x2 LCD
;Lcd_4_bit.c,188 :: 		GotoYXPositionOnLCD(LCD_LINE2, 0);     // Goto 1,0 location
0x009B	0x3001      	MOVLW      1
0x009C	0x1283      	BCF        STATUS, 5
0x009D	0x1303      	BCF        STATUS, 6
0x009E	0x00A4      	MOVWF      FARG_GotoYXPositionOnLCD_LineNumber
0x009F	0x01A5      	CLRF       FARG_GotoYXPositionOnLCD_OFFSET
0x00A0	0x206C      	CALL       _GotoYXPositionOnLCD
;Lcd_4_bit.c,189 :: 		WriteStringToLCD(s);
0x00A1	0x0822      	MOVF       FARG_WriteLCDLine2_s, 0
0x00A2	0x00A4      	MOVWF      FARG_WriteStringToLCD_s
0x00A3	0x0823      	MOVF       FARG_WriteLCDLine2_s+1, 0
0x00A4	0x00A5      	MOVWF      FARG_WriteStringToLCD_s+1
0x00A5	0x2051      	CALL       _WriteStringToLCD
;Lcd_4_bit.c,190 :: 		}
L_end_WriteLCDLine2:
0x00A6	0x0008      	RETURN
; end of _WriteLCDLine2
_welcome_msg:
;Lcd_4_bit.c,213 :: 		void welcome_msg(){
;Lcd_4_bit.c,216 :: 		ClearLCDScreen();               // Clear display  +++++++++++++++++|||||
0x00A7	0x208B      	CALL       _ClearLCDScreen
;Lcd_4_bit.c,217 :: 		WriteLCDLine1("* Hello  World *");
0x00A8	0x3038      	MOVLW      ?lstr_1_Lcd_4_bit
0x00A9	0x00A2      	MOVWF      FARG_WriteLCDLine1_s
0x00AA	0x3001      	MOVLW      hi_addr(?lstr_1_Lcd_4_bit)
0x00AB	0x00A3      	MOVWF      FARG_WriteLCDLine1_s+1
0x00AC	0x2080      	CALL       _WriteLCDLine1
;Lcd_4_bit.c,218 :: 		WriteLCDLine2("**  MELAB-BD  **");
0x00AD	0x3027      	MOVLW      ?lstr_2_Lcd_4_bit
0x00AE	0x00A2      	MOVWF      FARG_WriteLCDLine2_s
0x00AF	0x3001      	MOVLW      hi_addr(?lstr_2_Lcd_4_bit)
0x00B0	0x00A3      	MOVWF      FARG_WriteLCDLine2_s+1
0x00B1	0x209B      	CALL       _WriteLCDLine2
;Lcd_4_bit.c,221 :: 		Delay_ms(1000);
0x00B2	0x3006      	MOVLW      6
0x00B3	0x00FB      	MOVWF      R11
0x00B4	0x3013      	MOVLW      19
0x00B5	0x00FC      	MOVWF      R12
0x00B6	0x30AD      	MOVLW      173
0x00B7	0x00FD      	MOVWF      R13
L_welcome_msg13:
0x00B8	0x0BFD      	DECFSZ     R13, 1
0x00B9	0x28B8      	GOTO       L_welcome_msg13
0x00BA	0x0BFC      	DECFSZ     R12, 1
0x00BB	0x28B8      	GOTO       L_welcome_msg13
0x00BC	0x0BFB      	DECFSZ     R11, 1
0x00BD	0x28B8      	GOTO       L_welcome_msg13
0x00BE	0x0000      	NOP
0x00BF	0x0000      	NOP
;Lcd_4_bit.c,224 :: 		}
L_end_welcome_msg:
0x00C0	0x0008      	RETURN
; end of _welcome_msg
_InitLCD:
;Lcd_4_bit.c,73 :: 		void InitLCD(void)
;Lcd_4_bit.c,76 :: 		LCD_EN            = 0;   // E  = 0
0x00C1	0x1283      	BCF        STATUS, 5
0x00C2	0x1303      	BCF        STATUS, 6
0x00C3	0x1087      	BCF        RC1_bit, BitPos(RC1_bit+0)
;Lcd_4_bit.c,77 :: 		LCD_RS            = 0;   // RS = 0
0x00C4	0x1007      	BCF        RC0_bit, BitPos(RC0_bit+0)
;Lcd_4_bit.c,79 :: 		Delay_ms(40);
0x00C5	0x3034      	MOVLW      52
0x00C6	0x00FC      	MOVWF      R12
0x00C7	0x30F1      	MOVLW      241
0x00C8	0x00FD      	MOVWF      R13
L_InitLCD3:
0x00C9	0x0BFD      	DECFSZ     R13, 1
0x00CA	0x28C9      	GOTO       L_InitLCD3
0x00CB	0x0BFC      	DECFSZ     R12, 1
0x00CC	0x28C9      	GOTO       L_InitLCD3
0x00CD	0x0000      	NOP
0x00CE	0x0000      	NOP
;Lcd_4_bit.c,81 :: 		LCD_PORT &= 0x0F;                  // Make Data pins zero
0x00CF	0x300F      	MOVLW      15
0x00D0	0x0586      	ANDWF      PORTB, 1
;Lcd_4_bit.c,82 :: 		LCD_PORT |= 0x30;                  // Write 0x3 value on data bus
0x00D1	0x3030      	MOVLW      48
0x00D2	0x0486      	IORWF      PORTB, 1
;Lcd_4_bit.c,83 :: 		ToggleEpinOfLCD();                  // Give pulse on E pin
0x00D3	0x2003      	CALL       _ToggleEpinOfLCD
;Lcd_4_bit.c,85 :: 		Delay_ms(6);
0x00D4	0x3008      	MOVLW      8
0x00D5	0x00FC      	MOVWF      R12
0x00D6	0x30C9      	MOVLW      201
0x00D7	0x00FD      	MOVWF      R13
L_InitLCD4:
0x00D8	0x0BFD      	DECFSZ     R13, 1
0x00D9	0x28D8      	GOTO       L_InitLCD4
0x00DA	0x0BFC      	DECFSZ     R12, 1
0x00DB	0x28D8      	GOTO       L_InitLCD4
0x00DC	0x0000      	NOP
0x00DD	0x0000      	NOP
;Lcd_4_bit.c,87 :: 		LCD_PORT &= 0x0F;                  // Make Data pins zero
0x00DE	0x300F      	MOVLW      15
0x00DF	0x0586      	ANDWF      PORTB, 1
;Lcd_4_bit.c,88 :: 		LCD_PORT |= 0x30;                  // Write 0x3 value on data bus
0x00E0	0x3030      	MOVLW      48
0x00E1	0x0486      	IORWF      PORTB, 1
;Lcd_4_bit.c,89 :: 		ToggleEpinOfLCD();                  // Give pulse on E pin
0x00E2	0x2003      	CALL       _ToggleEpinOfLCD
;Lcd_4_bit.c,91 :: 		Delay_us(300);
0x00E3	0x3063      	MOVLW      99
0x00E4	0x00FD      	MOVWF      R13
L_InitLCD5:
0x00E5	0x0BFD      	DECFSZ     R13, 1
0x00E6	0x28E5      	GOTO       L_InitLCD5
0x00E7	0x0000      	NOP
0x00E8	0x0000      	NOP
;Lcd_4_bit.c,93 :: 		LCD_PORT &= 0x0F;                  // Make Data pins zero
0x00E9	0x300F      	MOVLW      15
0x00EA	0x0586      	ANDWF      PORTB, 1
;Lcd_4_bit.c,94 :: 		LCD_PORT |= 0x30;                  // Write 0x3 value on data bus
0x00EB	0x3030      	MOVLW      48
0x00EC	0x0486      	IORWF      PORTB, 1
;Lcd_4_bit.c,95 :: 		ToggleEpinOfLCD();                  // Give pulse on E pin
0x00ED	0x2003      	CALL       _ToggleEpinOfLCD
;Lcd_4_bit.c,97 :: 		Delay_ms(2);
0x00EE	0x3003      	MOVLW      3
0x00EF	0x00FC      	MOVWF      R12
0x00F0	0x3097      	MOVLW      151
0x00F1	0x00FD      	MOVWF      R13
L_InitLCD6:
0x00F2	0x0BFD      	DECFSZ     R13, 1
0x00F3	0x28F2      	GOTO       L_InitLCD6
0x00F4	0x0BFC      	DECFSZ     R12, 1
0x00F5	0x28F2      	GOTO       L_InitLCD6
0x00F6	0x0000      	NOP
0x00F7	0x0000      	NOP
;Lcd_4_bit.c,99 :: 		LCD_PORT &= 0x0F;                  // Make Data pins zero
0x00F8	0x300F      	MOVLW      15
0x00F9	0x0586      	ANDWF      PORTB, 1
;Lcd_4_bit.c,100 :: 		LCD_PORT |= 0x20;                  // Write 0x2 value on data bus
0x00FA	0x1686      	BSF        PORTB, 5
;Lcd_4_bit.c,101 :: 		ToggleEpinOfLCD();                  // Give pulse on E pin
0x00FB	0x2003      	CALL       _ToggleEpinOfLCD
;Lcd_4_bit.c,103 :: 		Delay_ms(2);
0x00FC	0x3003      	MOVLW      3
0x00FD	0x00FC      	MOVWF      R12
0x00FE	0x3097      	MOVLW      151
0x00FF	0x00FD      	MOVWF      R13
L_InitLCD7:
0x0100	0x0BFD      	DECFSZ     R13, 1
0x0101	0x2900      	GOTO       L_InitLCD7
0x0102	0x0BFC      	DECFSZ     R12, 1
0x0103	0x2900      	GOTO       L_InitLCD7
0x0104	0x0000      	NOP
0x0105	0x0000      	NOP
;Lcd_4_bit.c,105 :: 		WriteCommandToLCD(0x28);    //function set
0x0106	0x3028      	MOVLW      40
0x0107	0x00A6      	MOVWF      FARG_WriteCommandToLCD_Command
0x0108	0x2034      	CALL       _WriteCommandToLCD
;Lcd_4_bit.c,106 :: 		WriteCommandToLCD(0x0c);    //display on,cursor off,blink off
0x0109	0x300C      	MOVLW      12
0x010A	0x00A6      	MOVWF      FARG_WriteCommandToLCD_Command
0x010B	0x2034      	CALL       _WriteCommandToLCD
;Lcd_4_bit.c,107 :: 		WriteCommandToLCD(0x01);    //clear display
0x010C	0x3001      	MOVLW      1
0x010D	0x00A6      	MOVWF      FARG_WriteCommandToLCD_Command
0x010E	0x2034      	CALL       _WriteCommandToLCD
;Lcd_4_bit.c,108 :: 		WriteCommandToLCD(0x06);    //entry mode, set increment
0x010F	0x3006      	MOVLW      6
0x0110	0x00A6      	MOVWF      FARG_WriteCommandToLCD_Command
0x0111	0x2034      	CALL       _WriteCommandToLCD
;Lcd_4_bit.c,109 :: 		}
L_end_InitLCD:
0x0112	0x0008      	RETURN
; end of _InitLCD
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x0113	0x202D      	CALL       _____DoICP
0x0114	0x118A      	BCF        PCLATH, 3
0x0115	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x0116	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x0117	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x0118	0x0AA0      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0119	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x011A	0x0AA1      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x011B	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x011C	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x011D	0x2913      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x011E	0x0008      	RETURN
; end of ___CC2DW
_main:
;Lcd_4_bit.c,46 :: 		void main(){
;Lcd_4_bit.c,47 :: 		TRISB = 0;
0x011F	0x1683      	BSF        STATUS, 5
0x0120	0x1303      	BCF        STATUS, 6
0x0121	0x0186      	CLRF       TRISB
;Lcd_4_bit.c,48 :: 		TRISC = 0;
0x0122	0x0187      	CLRF       TRISC
;Lcd_4_bit.c,50 :: 		InitLCD();
0x0123	0x20C1      	CALL       _InitLCD
;Lcd_4_bit.c,51 :: 		while(1){
L_main1:
;Lcd_4_bit.c,59 :: 		welcome_msg();
0x0124	0x20A7      	CALL       _welcome_msg
;Lcd_4_bit.c,61 :: 		}
0x0125	0x2924      	GOTO       L_main1
;Lcd_4_bit.c,63 :: 		}
L_end_main:
0x0126	0x2926      	GOTO       $+0
; end of _main
;Lcd_4_bit.c,0 :: ?lstr_2_Lcd_4_bit
0x0127	0x342A ;?lstr_2_Lcd_4_bit+0
0x0128	0x342A ;?lstr_2_Lcd_4_bit+1
0x0129	0x3420 ;?lstr_2_Lcd_4_bit+2
0x012A	0x3420 ;?lstr_2_Lcd_4_bit+3
0x012B	0x344D ;?lstr_2_Lcd_4_bit+4
0x012C	0x3445 ;?lstr_2_Lcd_4_bit+5
0x012D	0x344C ;?lstr_2_Lcd_4_bit+6
0x012E	0x3441 ;?lstr_2_Lcd_4_bit+7
0x012F	0x3442 ;?lstr_2_Lcd_4_bit+8
0x0130	0x342D ;?lstr_2_Lcd_4_bit+9
0x0131	0x3442 ;?lstr_2_Lcd_4_bit+10
0x0132	0x3444 ;?lstr_2_Lcd_4_bit+11
0x0133	0x3420 ;?lstr_2_Lcd_4_bit+12
0x0134	0x3420 ;?lstr_2_Lcd_4_bit+13
0x0135	0x342A ;?lstr_2_Lcd_4_bit+14
0x0136	0x342A ;?lstr_2_Lcd_4_bit+15
0x0137	0x3400 ;?lstr_2_Lcd_4_bit+16
; end of ?lstr_2_Lcd_4_bit
;Lcd_4_bit.c,0 :: ?lstr_1_Lcd_4_bit
0x0138	0x342A ;?lstr_1_Lcd_4_bit+0
0x0139	0x3420 ;?lstr_1_Lcd_4_bit+1
0x013A	0x3448 ;?lstr_1_Lcd_4_bit+2
0x013B	0x3465 ;?lstr_1_Lcd_4_bit+3
0x013C	0x346C ;?lstr_1_Lcd_4_bit+4
0x013D	0x346C ;?lstr_1_Lcd_4_bit+5
0x013E	0x346F ;?lstr_1_Lcd_4_bit+6
0x013F	0x3420 ;?lstr_1_Lcd_4_bit+7
0x0140	0x3420 ;?lstr_1_Lcd_4_bit+8
0x0141	0x3457 ;?lstr_1_Lcd_4_bit+9
0x0142	0x346F ;?lstr_1_Lcd_4_bit+10
0x0143	0x3472 ;?lstr_1_Lcd_4_bit+11
0x0144	0x346C ;?lstr_1_Lcd_4_bit+12
0x0145	0x3464 ;?lstr_1_Lcd_4_bit+13
0x0146	0x3420 ;?lstr_1_Lcd_4_bit+14
0x0147	0x342A ;?lstr_1_Lcd_4_bit+15
0x0148	0x3400 ;?lstr_1_Lcd_4_bit+16
; end of ?lstr_1_Lcd_4_bit
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003      [13]    _ToggleEpinOfLCD
0x0010      [29]    _WriteDataToLCD
0x002D       [7]    _____DoICP
0x0034      [29]    _WriteCommandToLCD
0x0051      [27]    _WriteStringToLCD
0x006C      [20]    _GotoYXPositionOnLCD
0x0080      [11]    _WriteLCDLine1
0x008B      [16]    _ClearLCDScreen
0x009B      [12]    _WriteLCDLine2
0x00A7      [26]    _welcome_msg
0x00C1      [82]    _InitLCD
0x0113      [12]    ___CC2DW
0x011F       [8]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [1]    PORTB
0x0007       [0]    RC1_bit
0x0007       [0]    RC0_bit
0x000A       [1]    PCLATH
0x0020       [2]    ___DoICPAddr
0x0022       [2]    FARG_WriteLCDLine2_s
0x0022       [2]    FARG_WriteLCDLine1_s
0x0024       [1]    FARG_GotoYXPositionOnLCD_LineNumber
0x0024       [2]    FARG_WriteStringToLCD_s
0x0025       [1]    FARG_GotoYXPositionOnLCD_OFFSET
0x0026       [1]    FARG_WriteDataToLCD_LCDChar
0x0026       [1]    FARG_WriteCommandToLCD_Command
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0086       [1]    TRISB
0x0087       [1]    TRISC
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0127      [17]    ?lstr_2_Lcd_4_bit
0x0138      [17]    ?lstr_1_Lcd_4_bit
//** Label List: ** 
//----------------------------------------------
  L_Move_Delay0
  L_main1
  L_main2
  L_InitLCD3
  L_InitLCD4
  L_InitLCD5
  L_InitLCD6
  L_InitLCD7
  L_ToggleEpinOfLCD8
  L_ToggleEpinOfLCD9
  L_WriteStringToLCD10
  L_WriteStringToLCD11
  L_ClearLCDScreen12
  L_welcome_msg13
  L_end_Move_Delay
  _Move_Delay
  L_end_main
  _main
  L_end_InitLCD
  _InitLCD
  L_end_ToggleEpinOfLCD
  _ToggleEpinOfLCD
  L_end_WriteCommandToLCD
  _WriteCommandToLCD
  L_end_WriteDataToLCD
  _WriteDataToLCD
  L_end_WriteStringToLCD
  _WriteStringToLCD
  L_end_ClearLCDScreen
  _ClearLCDScreen
  L_end_GotoYXPositionOnLCD
  _GotoYXPositionOnLCD
  L__GotoYXPositionOnLCD23
  L__GotoYXPositionOnLCD24
  L_end_WriteLCDLine1
  _WriteLCDLine1
  L_end_WriteLCDLine2
  _WriteLCDLine2
  L_end_WriteLCDLine3
  _WriteLCDLine3
  L_end_WriteLCDLine4
  _WriteLCDLine4
  L_end_welcome_msg
  _welcome_msg
  L_loopCA2AWs
  L_CA2AWend
  _CCA2AW_Loop1
  L_loopCS2Ss
  L_CS2Send
  _CCS2S_Loop1
  L_CCS2Send
  L_loopFZinSWs
  L_FZinSend
  _CC2D_Loop1
  L_end_____DoICP
  _____DoICP
  L_end_____DoIFC
  _____DoIFC
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end___CC2DW
  ___CC2DW
  L_end_Swap
  _Swap
