;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 30/06/2019 17:40:12
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x287D      	GOTO       125
_display_8bit:
;74HC595.c,29 :: 		void display_8bit(char data_byte) {
;74HC595.c,32 :: 		for(i = 0; i < 8; i ++){
0x0003	0x1283      	BCF        STATUS, 5
0x0004	0x1303      	BCF        STATUS, 6
0x0005	0x01F1      	CLRF       R1
L_display_8bit0:
0x0006	0x3008      	MOVLW      8
0x0007	0x0271      	SUBWF      R1, 0
0x0008	0x1803      	BTFSC      STATUS, 0
0x0009	0x2815      	GOTO       L_display_8bit1
;74HC595.c,33 :: 		if(data_byte.B7){DT = 1;} else {DT = 0;}
0x000A	0x1FB5      	BTFSS      FARG_display_8bit_data_byte, 7
0x000B	0x280E      	GOTO       L_display_8bit3
0x000C	0x1407      	BSF        PORTC, 0
0x000D	0x280F      	GOTO       L_display_8bit4
L_display_8bit3:
0x000E	0x1007      	BCF        PORTC, 0
L_display_8bit4:
;74HC595.c,34 :: 		SH = 1;
0x000F	0x1487      	BSF        PORTC, 1
;74HC595.c,35 :: 		data_byte <<= 1;
0x0010	0x0DB5      	RLF        FARG_display_8bit_data_byte, 1
0x0011	0x1035      	BCF        FARG_display_8bit_data_byte, 0
;74HC595.c,36 :: 		SH = 0;
0x0012	0x1087      	BCF        PORTC, 1
;74HC595.c,32 :: 		for(i = 0; i < 8; i ++){
0x0013	0x0AF1      	INCF       R1, 1
;74HC595.c,37 :: 		}
0x0014	0x2806      	GOTO       L_display_8bit0
L_display_8bit1:
;74HC595.c,39 :: 		ST = 1; //same as RC0=1; write the new bits to the register.
0x0015	0x1507      	BSF        PORTC, 2
;74HC595.c,40 :: 		Delay_ms(3);
0x0016	0x3004      	MOVLW      4
0x0017	0x00FC      	MOVWF      R12
0x0018	0x30E4      	MOVLW      228
0x0019	0x00FD      	MOVWF      R13
L_display_8bit5:
0x001A	0x0BFD      	DECFSZ     R13, 1
0x001B	0x281A      	GOTO       L_display_8bit5
0x001C	0x0BFC      	DECFSZ     R12, 1
0x001D	0x281A      	GOTO       L_display_8bit5
0x001E	0x0000      	NOP
;74HC595.c,41 :: 		ST = 0; //same as RC1=0; enable write to shift register
0x001F	0x1107      	BCF        PORTC, 2
;74HC595.c,42 :: 		}
L_end_display_8bit:
0x0020	0x0008      	RETURN
; end of _display_8bit
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0021	0x1283      	BCF        STATUS, 5
0x0022	0x1303      	BCF        STATUS, 6
0x0023	0x082B      	MOVF       ___DoICPAddr+1, 0
0x0024	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0025	0x082A      	MOVF       ___DoICPAddr, 0
0x0026	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0027	0x0008      	RETURN
; end of _____DoICP
_Div_8X8_U:
;__Lib_Math.c,189 :: 		
;__Lib_Math.c,196 :: 		
0x0028	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,197 :: 		
0x0029	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,198 :: 		
0x002A	0x01F8      	CLRF       R8
;__Lib_Math.c,199 :: 		
0x002B	0x3008      	MOVLW      8
;__Lib_Math.c,200 :: 		
0x002C	0x00FC      	MOVWF      R12
;__Lib_Math.c,201 :: 		
0x002D	0x0D70      	RLF        R0, 0
;__Lib_Math.c,202 :: 		
0x002E	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,203 :: 		
0x002F	0x0874      	MOVF       R4, 0
;__Lib_Math.c,204 :: 		
0x0030	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,205 :: 		
0x0031	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,206 :: 		
0x0032	0x2835      	GOTO       $+3
;__Lib_Math.c,207 :: 		
0x0033	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,208 :: 		
0x0034	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,209 :: 		
0x0035	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,210 :: 		
0x0036	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,211 :: 		
0x0037	0x282D      	GOTO       $-10
;__Lib_Math.c,213 :: 		
L_end_Div_8X8_U:
0x0038	0x0008      	RETURN
; end of _Div_8X8_U
_display_4_digit:
;74HC595.c,48 :: 		void display_4_digit(){
;74HC595.c,51 :: 		PORTD = DIGIT0;  // RA.0 to RA3 Output
0x0039	0x1283      	BCF        STATUS, 5
0x003A	0x1303      	BCF        STATUS, 6
0x003B	0x082C      	MOVF       _DIGIT0, 0
0x003C	0x0088      	MOVWF      PORTD
;74HC595.c,52 :: 		display_8bit(digit_1th);
0x003D	0x082D      	MOVF       _digit_1th, 0
0x003E	0x00B5      	MOVWF      FARG_display_8bit_data_byte
0x003F	0x2003      	CALL       _display_8bit
;74HC595.c,53 :: 		delay_ms(500);
0x0040	0x3003      	MOVLW      3
0x0041	0x00FB      	MOVWF      R11
0x0042	0x308A      	MOVLW      138
0x0043	0x00FC      	MOVWF      R12
0x0044	0x3055      	MOVLW      85
0x0045	0x00FD      	MOVWF      R13
L_display_4_digit6:
0x0046	0x0BFD      	DECFSZ     R13, 1
0x0047	0x2846      	GOTO       L_display_4_digit6
0x0048	0x0BFC      	DECFSZ     R12, 1
0x0049	0x2846      	GOTO       L_display_4_digit6
0x004A	0x0BFB      	DECFSZ     R11, 1
0x004B	0x2846      	GOTO       L_display_4_digit6
0x004C	0x0000      	NOP
0x004D	0x0000      	NOP
;74HC595.c,55 :: 		PORTD = DIGIT1;  // RA.0 to RA3 Output
0x004E	0x082F      	MOVF       _DIGIT1, 0
0x004F	0x0088      	MOVWF      PORTD
;74HC595.c,56 :: 		display_8bit(digit_10th);
0x0050	0x082E      	MOVF       _digit_10th, 0
0x0051	0x00B5      	MOVWF      FARG_display_8bit_data_byte
0x0052	0x2003      	CALL       _display_8bit
;74HC595.c,57 :: 		delay_ms(500);
0x0053	0x3003      	MOVLW      3
0x0054	0x00FB      	MOVWF      R11
0x0055	0x308A      	MOVLW      138
0x0056	0x00FC      	MOVWF      R12
0x0057	0x3055      	MOVLW      85
0x0058	0x00FD      	MOVWF      R13
L_display_4_digit7:
0x0059	0x0BFD      	DECFSZ     R13, 1
0x005A	0x2859      	GOTO       L_display_4_digit7
0x005B	0x0BFC      	DECFSZ     R12, 1
0x005C	0x2859      	GOTO       L_display_4_digit7
0x005D	0x0BFB      	DECFSZ     R11, 1
0x005E	0x2859      	GOTO       L_display_4_digit7
0x005F	0x0000      	NOP
0x0060	0x0000      	NOP
;74HC595.c,69 :: 		}
L_end_display_4_digit:
0x0061	0x0008      	RETURN
; end of _display_4_digit
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x0062	0x2021      	CALL       _____DoICP
0x0063	0x118A      	BCF        PCLATH, 3
0x0064	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x0065	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x0066	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x0067	0x0AAA      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0068	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0069	0x0AAB      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x006A	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x006B	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x006C	0x2862      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x006D	0x0008      	RETURN
; end of ___CC2DW
_seperate_digit:
;74HC595.c,16 :: 		void seperate_digit(char dt_byte){
;74HC595.c,19 :: 		digit_1th =  DSP_code[i%10u];
0x006E	0x300A      	MOVLW      10
0x006F	0x1283      	BCF        STATUS, 5
0x0070	0x1303      	BCF        STATUS, 6
0x0071	0x00F4      	MOVWF      R4
0x0072	0x0834      	MOVF       FARG_seperate_digit_dt_byte, 0
0x0073	0x00F0      	MOVWF      R0
0x0074	0x2028      	CALL       _Div_8X8_U
0x0075	0x0878      	MOVF       R8, 0
0x0076	0x00F0      	MOVWF      R0
0x0077	0x0870      	MOVF       R0, 0
0x0078	0x3E20      	ADDLW      _DSP_code
0x0079	0x0084      	MOVWF      FSR
0x007A	0x0800      	MOVF       INDF, 0
0x007B	0x00AD      	MOVWF      _digit_1th
;74HC595.c,23 :: 		}
L_end_seperate_digit:
0x007C	0x0008      	RETURN
; end of _seperate_digit
_main:
0x007D	0x303F      	MOVLW      63
0x007E	0x1283      	BCF        STATUS, 5
0x007F	0x1303      	BCF        STATUS, 6
0x0080	0x00A0      	MOVWF      _DSP_code
0x0081	0x3006      	MOVLW      6
0x0082	0x00A1      	MOVWF      33
0x0083	0x305B      	MOVLW      91
0x0084	0x00A2      	MOVWF      34
0x0085	0x304F      	MOVLW      79
0x0086	0x00A3      	MOVWF      35
0x0087	0x3066      	MOVLW      102
0x0088	0x00A4      	MOVWF      36
0x0089	0x306D      	MOVLW      109
0x008A	0x00A5      	MOVWF      37
0x008B	0x307D      	MOVLW      125
0x008C	0x00A6      	MOVWF      38
0x008D	0x3007      	MOVLW      7
0x008E	0x00A7      	MOVWF      39
0x008F	0x307F      	MOVLW      127
0x0090	0x00A8      	MOVWF      40
0x0091	0x306F      	MOVLW      111
0x0092	0x00A9      	MOVWF      41
;4X7_Seg_595_Counter.c,13 :: 		void main(){
;4X7_Seg_595_Counter.c,15 :: 		TRISB = 0;
0x0093	0x1683      	BSF        STATUS, 5
0x0094	0x0186      	CLRF       TRISB
;4X7_Seg_595_Counter.c,16 :: 		TRISC = 0;
0x0095	0x0187      	CLRF       TRISC
;4X7_Seg_595_Counter.c,17 :: 		PORTB = 0;
0x0096	0x1283      	BCF        STATUS, 5
0x0097	0x0186      	CLRF       PORTB
;4X7_Seg_595_Counter.c,18 :: 		TRISA = 0;
0x0098	0x1683      	BSF        STATUS, 5
0x0099	0x0185      	CLRF       TRISA
;4X7_Seg_595_Counter.c,19 :: 		PORTA = 0;
0x009A	0x1283      	BCF        STATUS, 5
0x009B	0x0185      	CLRF       PORTA
;4X7_Seg_595_Counter.c,20 :: 		TRISD = 0;
0x009C	0x1683      	BSF        STATUS, 5
0x009D	0x0188      	CLRF       TRISD
;4X7_Seg_595_Counter.c,21 :: 		PORTD = 0;
0x009E	0x1283      	BCF        STATUS, 5
0x009F	0x0188      	CLRF       PORTD
;4X7_Seg_595_Counter.c,23 :: 		DIGIT0 = 0b00000001;   // 0b11111110
0x00A0	0x3001      	MOVLW      1
0x00A1	0x00AC      	MOVWF      _DIGIT0
;4X7_Seg_595_Counter.c,24 :: 		DIGIT1 = 0b00000010;   // 0b11111101
0x00A2	0x3002      	MOVLW      2
0x00A3	0x00AF      	MOVWF      _DIGIT1
;4X7_Seg_595_Counter.c,25 :: 		DIGIT2 = 0xFB;
0x00A4	0x30FB      	MOVLW      251
0x00A5	0x00B0      	MOVWF      _DIGIT2
;4X7_Seg_595_Counter.c,26 :: 		DIGIT3 = 0xF7;
0x00A6	0x30F7      	MOVLW      247
0x00A7	0x00B1      	MOVWF      _DIGIT3
;4X7_Seg_595_Counter.c,28 :: 		while(1){
L_main0:
;4X7_Seg_595_Counter.c,29 :: 		for(i=0; i<20; i++){
0x00A8	0x01B2      	CLRF       main_i_L0
0x00A9	0x01B3      	CLRF       main_i_L0+1
L_main2:
0x00AA	0x3080      	MOVLW      128
0x00AB	0x0633      	XORWF      main_i_L0+1, 0
0x00AC	0x00F0      	MOVWF      R0
0x00AD	0x3080      	MOVLW      128
0x00AE	0x0270      	SUBWF      R0, 0
0x00AF	0x1D03      	BTFSS      STATUS, 2
0x00B0	0x28B3      	GOTO       L__main6
0x00B1	0x3014      	MOVLW      20
0x00B2	0x0232      	SUBWF      main_i_L0, 0
L__main6:
0x00B3	0x1803      	BTFSC      STATUS, 0
0x00B4	0x28BD      	GOTO       L_main3
;4X7_Seg_595_Counter.c,31 :: 		seperate_digit(i) ;
0x00B5	0x0832      	MOVF       main_i_L0, 0
0x00B6	0x00B4      	MOVWF      FARG_seperate_digit_dt_byte
0x00B7	0x206E      	CALL       _seperate_digit
;4X7_Seg_595_Counter.c,32 :: 		display_4_digit();
0x00B8	0x2039      	CALL       _display_4_digit
;4X7_Seg_595_Counter.c,29 :: 		for(i=0; i<20; i++){
0x00B9	0x0AB2      	INCF       main_i_L0, 1
0x00BA	0x1903      	BTFSC      STATUS, 2
0x00BB	0x0AB3      	INCF       main_i_L0+1, 1
;4X7_Seg_595_Counter.c,34 :: 		}
0x00BC	0x28AA      	GOTO       L_main2
L_main3:
;4X7_Seg_595_Counter.c,35 :: 		}
0x00BD	0x28A8      	GOTO       L_main0
;4X7_Seg_595_Counter.c,36 :: 		} // end main
L_end_main:
0x00BE	0x28BE      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003      [30]    _display_8bit
0x0021       [7]    _____DoICP
0x0028      [17]    _Div_8X8_U
0x0039      [41]    _display_4_digit
0x0062      [12]    ___CC2DW
0x006E      [15]    _seperate_digit
0x007D      [66]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [1]    PORTA
0x0006       [1]    PORTB
0x0007       [1]    PORTC
0x0008       [1]    PORTD
0x000A       [1]    PCLATH
0x0020      [10]    _DSP_code
0x002A       [2]    ___DoICPAddr
0x002C       [1]    _DIGIT0
0x002D       [1]    _digit_1th
0x002E       [1]    _digit_10th
0x002F       [1]    _DIGIT1
0x0030       [1]    _DIGIT2
0x0031       [1]    _DIGIT3
0x0032       [2]    main_i_L0
0x0034       [1]    FARG_seperate_digit_dt_byte
0x0035       [1]    FARG_display_8bit_data_byte
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0085       [1]    TRISA
0x0086       [1]    TRISB
0x0087       [1]    TRISC
0x0088       [1]    TRISD
